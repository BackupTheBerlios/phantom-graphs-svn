Jumli
{
  *** Applikation ***;
  Version=1.4;
  Elements=263;
  {
    *** Model ***;
    Typ=2;
    MainFile="main.cpp";
    ActiveDiagramm=307;
    {
      *** GenSettings ***;
      GetPrefix="Get";
      SetPrefix="Set";
      DBBaseClass="DbBasisObject";
      DBRecordSet="DbSet";
      GenerateWrite=true;
      GenerateRead=true;
    };
    {
      *** CompileDebugSettings ***;
      AufrufCompiler="g++";
      AufrufDebugger="gdb";
      DebugOptionen="-nw";
    };
    {
      *** Package ***;
      Name="UseCases";
      ID=3;
      Zugriff=2;
      Type=2;
      {
        *** Diagramm ***;
        Name="UseCases";
        ID=4;
        DiagrammTyp=2;
        {
          *** UseCaseZeichner ***;
          Rechteck=375,198,434,237;
          Order=-1;
          UMLElementID=5;
        };
        {
          *** UseCaseZeichner ***;
          Rechteck=376,309,435,348;
          Order=-1;
          UMLElementID=6;
        };
        {
          *** UseCaseZeichner ***;
          Rechteck=376,428,435,467;
          Order=-1;
          UMLElementID=7;
        };
        {
          *** ActorZeichner ***;
          Rechteck=93,290,132,349;
          Order=-1;
          UMLElementID=8;
        };
        {
          *** ActorZeichner ***;
          Rechteck=695,427,734,486;
          Order=-1;
          UMLElementID=12;
        };
        {
          *** SystemZeichner ***;
          Rechteck=213,127,609,598;
          Order=-1;
          UMLElementID=14;
        };
        {
          *** BeziehungZeichner ***;
          Rechteck=252,325,259,332;
          Order=-1;
          UMLElementID=9;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Order=-1;
          UMLElementID=10;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Rechteck=540,456,547,463;
          Order=-1;
          UMLElementID=13;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Order=-1;
          UMLElementID=11;
          TextOffset=0,5;
        };
      };
      {
        *** UseCase ***;
        Doku="Wird vom Layout Designer gestartet indem mit dem \nPhantom einer \
        oder mehrere Knoten markiert werden. \nSpießt der Layout Designer nun einen \
        der markierten \nKnoten auf, kann er an dem markierten Teilgraphen \nziehen. \
        Wendet er genügend Kraft an, wird der Teilgraph \naus dem ursprünglichen \
        Graphen gelöst.";
        Name="Teilgraph lösen";
        ID=5;
        Zugriff=2;
      };
      {
        *** UseCase ***;
        Doku="Der Layout Designer startet den Use Case indem er einen \nKnoten \
        mit dem Phantom aufspießt. Er kann den Knoten \nnun auf einem durch Constraints \
        vorgegebenen Gitter \nverschieben. Wie leicht sich der Knoten verschieben \
        \nlässt, hängt davon ab, wie eng der Knoten mit seinen \nNachbarn verbunden \
        ist. Das Verschieben eines Knotens \nwird beendet, wenn der Layout Designer \
        den Knoten mit \ndem Phantom wieder loslässt.";
        Name="Knoten verschieben";
        ID=6;
        Zugriff=2;
      };
      {
        *** UseCase ***;
        Doku="Der Betrachter startet den Use Case, indem er einen \nStartknoten \
        und einen Zielknoten auswählt und dann im \nMenü \"Kantenzug\" anklickt. \
        Das System setzt das \nPhantom an den Startknoten. Für Kanten, die zum \
        \nZielknoten führen, werden Constraints aktiviert, damit der\nBetrachter \
        zum Ziel geleitet wird. Der Use Case ist beendet,\nwenn das Phantom am \
        Zielknoten angekommen ist.";
        Name="Kantenzug";
        ID=7;
        Zugriff=2;
      };
      {
        *** Actor ***;
        Name="LayoutDesigner";
        ID=8;
        Zugriff=2;
        {
          *** Beziehung ***;
          ID=9;
          Zugriff=2;
          A=8;
          B=6;
        };
        {
          *** Beziehung ***;
          ID=10;
          Zugriff=2;
          A=8;
          B=5;
        };
        {
          *** Beziehung ***;
          ID=11;
          Zugriff=2;
          A=8;
          B=7;
        };
      };
      {
        *** Actor ***;
        Name="Betrachter";
        ID=12;
        Zugriff=2;
        {
          *** Beziehung ***;
          ID=13;
          Zugriff=2;
          A=12;
          B=7;
        };
      };
      {
        *** System ***;
        Name="HapticGraphFrameWork";
        ID=14;
      };
    };
    {
      *** Package ***;
      Name="GraphFWEntwurf";
      ID=15;
      Zugriff=2;
      {
        *** Diagramm ***;
        Name="GraphFWEntwurf";
        ID=16;
        {
          *** CJumliTracker ***;
          Rechteck=107,299,365,556;
          Order=-1;
          UMLElementID=200;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=658,565,816,635;
          Order=-1;
          UMLElementID=233;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=658,653,816,723;
          Order=-1;
          UMLElementID=240;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=657,267,821,354;
          Order=-1;
          UMLElementID=235;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=240,691,345,750;
          Order=-1;
          UMLElementID=137;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=702,30,931,151;
          Order=-1;
          UMLElementID=184;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=368,691,473,750;
          Order=-1;
          UMLElementID=164;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=542,30,671,168;
          Order=-1;
          UMLElementID=176;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=657,385,836,540;
          Order=-1;
          UMLElementID=166;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=31,30,231,185;
          Order=-1;
          UMLElementID=152;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=311,81,480,253;
          Order=-1;
          UMLElementID=190;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=41,692,221,949;
          Order=-1;
          UMLElementID=245;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=367,639,374,646;
          Order=-1;
          UMLElementID=138;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=353,555,360,562;
          Order=-1;
          UMLElementID=165;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=267;
          TextOffset=0,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=363,509,370,516;
          Order=-1;
          UMLElementID=219;
          Knick=612,567;
          TextOffset=0,5;
          OffsetRollenName=-52,-18;
          OffsetA=5,5;
          OffsetB=-3,3;
          {
            *** Linie ***;
            Punkt=612,567;
          };
          {
            *** Linie ***;
            Punkt=367,513;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=367,556,374,563;
          Order=-1;
          UMLElementID=220;
          Knick=569,688;
          TextOffset=0,5;
          OffsetRollenName=-45,-19;
          OffsetA=5,5;
          OffsetB=-1,-31;
          {
            *** Linie ***;
            Punkt=569,688;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=465,356,472,363;
          Order=-1;
          UMLElementID=221;
          TextOffset=0,5;
          OffsetRollenName=-37,-18;
          OffsetA=5,5;
          OffsetB=6,-4;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=575,458,582,465;
          Order=-1;
          UMLElementID=222;
          Knick=473,465;
          TextOffset=0,5;
          OffsetRollenName=-38,-19;
          OffsetA=5,5;
          OffsetB=5,-1;
          {
            *** Linie ***;
            Punkt=473,465;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=259,308,375,325;
          Order=-1;
          UMLElementID=163;
          TextOffset=0,5;
          OffsetRollenName=69,-11;
          OffsetA=-10,2;
          OffsetB=5,5;
        };
      };
      {
        *** Diagramm ***;
        Name="HapticEffects";
        ID=303;
        {
          *** CJumliTracker ***;
          Rechteck=319,30,488,202;
          Order=-1;
          UMLElementID=190;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=324,310,493,465;
          Order=-1;
          UMLElementID=139;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=151;
          TextOffset=0,5;
        };
        {
          *** CJumliTracker ***;
          Rechteck=97,310,288,465;
          Order=-1;
          UMLElementID=87;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=101;
          TextOffset=0,5;
        };
        {
          *** CJumliTracker ***;
          Rechteck=532,310,701,465;
          Order=-1;
          UMLElementID=289;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=301;
          TextOffset=0,5;
        };
      };
      {
        *** Diagramm ***;
        Name="HapticActions";
        ID=305;
        {
          *** CJumliTracker ***;
          Rechteck=246,83,410,170;
          Order=-1;
          UMLElementID=235;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=208,268,451,457;
          Order=-1;
          UMLElementID=105;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=136;
          TextOffset=0,5;
        };
      };
      {
        *** Diagramm ***;
        Name="Utilities";
        ID=307;
        {
          *** CJumliTracker ***;
          Rechteck=90,66,195,204;
          Order=-1;
          UMLElementID=279;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
      };
      {
        *** Diagramm ***;
        Name="Businesslogic";
        ID=309;
        {
          *** CJumliTracker ***;
          Rechteck=71,299,228,420;
          Order=-1;
          UMLElementID=223;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=368,498,631,585;
          Order=-1;
          UMLElementID=229;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=488,60,601,119;
          Order=-1;
          UMLElementID=242;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=71,60,280,198;
          Order=-1;
          UMLElementID=269;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=228;
          TextOffset=0,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=279,83,286,90;
          Order=-1;
          UMLElementID=278;
          Knick=283,87;
          TextOffset=0,5;
          OffsetRollenName=-34,-20;
          OffsetA=5,5;
          OffsetB=5,5;
          {
            *** Linie ***;
            Punkt=283,87;
          };
        };
        {
          *** CJumliTracker ***;
          Rechteck=452,703,630,824;
          Order=-1;
          UMLElementID=80;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=481,208,661,465;
          Order=-1;
          UMLElementID=245;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=268;
          TextOffset=0,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=254,316,377,333;
          Order=-1;
          UMLElementID=266;
          TextOffset=0,5;
          OffsetRollenName=53,-19;
          OffsetA=5,5;
          OffsetB=5,5;
        };
        {
          *** CJumliTracker ***;
          Rechteck=70,595,311,886;
          Order=-1;
          UMLElementID=352;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=374;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=377,612,384,619;
          Order=-1;
          UMLElementID=375;
          TextOffset=0,5;
        };
      };
      {
        *** Diagramm ***;
        Name="Analysiert";
        ID=376;
      };
      {
        *** Package ***;
        Name="genSource";
        ID=17;
        Zugriff=2;
      };
      {
        *** Klasse ***;
        Name="AppConfiguration";
        ID=80;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\AppConfiguration.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\AppConfiguration.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_ProjectDuration";
          ID=81;
          Datentyp="int";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="AppConfiguration";
          ID=82;
        };
        {
          *** Methode ***;
          Name="getProjectDuration";
          ID=83;
          RueckgabeWert="int";
        };
        {
          *** Methode ***;
          Name="setProjectDuration";
          ID=84;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=85;
            Typ="int";
          };
        };
        {
          *** Methode ***;
          Name="~AppConfiguration";
          ID=86;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tdiese KLasse verwaltet alle Aufgaben, die im Graf dargestellt werden \
        sollen./...............................................................................";
        Name="BusinessTask";
        ID=352;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\BusinessTask.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\BusinessTask.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="day_begin";
          ID=353;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="day_duration";
          ID=354;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="day_end";
          ID=355;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="day_final";
          ID=356;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="force";
          ID=357;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="isMilestone";
          ID=358;
          Datentyp="bool";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="name[60]";
          ID=359;
          Datentyp="char";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="surface";
          ID=360;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Methode ***;
          Name="BusinessTask";
          ID=366;
        };
        {
          *** Methode ***;
          Name="BusinessTask";
          ID=361;
          {
            *** Parameter ***;
            Name="day_begin";
            ID=362;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="day_duration";
            ID=363;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="day_final";
            ID=364;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="isMilestone";
            ID=365;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="businessToViewCoordinates";
          ID=367;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="calcDayEnd";
          ID=368;
          Zugriff=2;
          RueckgabeWert="int";
          {
            *** Parameter ***;
            Name="begin";
            ID=369;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="duration";
            ID=370;
            Typ="int";
          };
        };
        {
          *** Methode ***;
          Name="getForce";
          ID=371;
          RueckgabeWert="int";
        };
        {
          *** Methode ***;
          Name="viewToBusinessCoordinates";
          ID=372;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="~BusinessTask";
          ID=373;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=374;
          A=352;
          B=223;
          BasisKlasse="IBusinessAdapter";
        };
        {
          *** Vererbung ***;
          ID=375;
          A=352;
          B=229;
          BasisKlasse="IBusinessConverter";
        };
      };
      {
        *** Klasse ***;
        Name="ConstantForceEffect";
        ID=87;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\ConstantForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\ConstantForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Direction";
          ID=88;
          Datentyp="hduVector3Dd";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=89;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="ConstantForceEffect";
          ID=90;
          {
            *** Parameter ***;
            Name="direction[3]";
            ID=91;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="magnitude";
            ID=92;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=93;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setDirection";
          ID=94;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="x";
            ID=95;
            Typ="double";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=96;
            Typ="double";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=97;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=98;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=99;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~ConstantForceEffect";
          ID=100;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=101;
          A=87;
          B=190;
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tEine Eventhandlerklasse die es ermöglicht, haptische Objekte mit \
        dem /\t\t\tPhantom zu bewegen/\t\t\t/\t\t\tDer Eventhandler reagiert auf \
        die folgende Events:/\t\t\t- der vordere Phantom-Button wird gedrückt, \
        wenn ein Objekt mit dem /\t\t\t  Phantom berührt wird/\t\t\t- das Phantom \
        wird mit gedrücktem Button bewegt/\t\t\t- der vordere Phantom-Button wird \
        losgelassen/\t\t\tWirkung: Solange der Button gedrückt gehalten wird, folgt \
        das /\t\t\tregistrierte Objekt der Bewegung des Phantom/ @todo\tObjekte \
        lassen sich noch nicht nach hinten verschieben...............................................................................";
        Name="DragObjectHandler";
        ID=105;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\DragObjectHandler.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\DragObjectHandler.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          Position des Proxy beim letzten Aufruf des Draghandlers/ Dient zur Berechnung \
          des Vektors um den das Objekt verschoben werden soll";
          Name="m_LastProxyPos";
          ID=106;
          Datentyp="hduVector3Dd";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tKonstruktor, initialisiert das Eventhandler-Objekt mit dem /\t\t\tzugehörigen \
          haptischen Objekt/ @param\tpObj\tPointer auf das haptische Objekt für das \
          der /\t\t\t\t\tEventhandler zuständig sein soll.......................................................................";
          Name="DragObjectHandler";
          ID=107;
          {
            *** Parameter ***;
            Name="pObj";
            ID=108;
            Typ="HapticObject *";
          };
        };
        {
          *** Methode ***;
          Doku="/ @brief\t(HLAPI-Callbackfunktion) Started das Draggen des Objekts/ \
          @param\tevent\tGibt an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion \
          aufgerufen werden soll, hier HL_EVENT_1BUTTONDOWN/\t@param\tshapeID\tDie \
          ShapeID des Objekts, das bewegt werden soll/ @param\tthread\tGibt an, in \
          welchem HLAPI-Thread das Event behandelt /\t\t\t\t\twerden soll, in diesem \
          Fall HL_CLIENT_THREAD/ @param\tcache\tHLAPI-State Schnappschuss in dem \
          Moment, in dem das Event feuert/ @param\tpHandlerObject\tPointer auf das \
          DragObjectHandler-Objekt, das/\t\t\t\t\tdas Event verarbeiten soll.......................................................................";
          Name="OnButtonDown";
          ID=109;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=110;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=111;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=112;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=113;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="pHandlerObject";
            ID=114;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\t(HLAPI-Callbackfunktion) Beendet das Draggen des Objekts/ @param\tevent\tGibt \
          an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
          werden soll, hier HL_EVENT_1BUTTONUP/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
          angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
          Event behandelt/\t\t\t\t\t werden soll, in diesem Fall HL_CLIENT_THREAD/ \
          @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert/ @param\tuserdata\tWird von dieser Funktion nicht benötigt.......................................................................";
          Name="OnButtonUp";
          ID=115;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=116;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=117;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=118;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=119;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="userdata";
            ID=120;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\t(HLAPI-Callbackfunktion) Steuert das Draggen des Objekts/ @param\tevent\tGibt \
          an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
          werden soll, hier HL_EVENT_MOTION/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
          angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
          Event behandelt/\t\t\t\t\twerden soll, in diesem Fall HL_CLIENT_THREAD/ \
          @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert/ @param\tpHandlerObject\tPointer auf das DragObjectHandler-Objekt, \
          das/\t\t\t\t\t das Event verarbeiten soll.......................................................................";
          Name="OnDrag";
          ID=121;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=122;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=123;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=124;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=125;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="pHandlerObject";
            ID=126;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tVeranlasst das haptische Objekt, sich mit dem Proxy zu bewegen/ \
          @param\tpCache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert.......................................................................";
          Name="handleDrag";
          ID=127;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pCache";
            ID=128;
            Typ="HLcache *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tNimmt die Proxy-Position beim Starten des Drag-Vorgangs auf/ @param\tpCache\tHLAPI-State \
          Schnappschuss in dem Moment, in dem das Event feuert.......................................................................";
          Name="initAction";
          ID=129;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pCache";
            ID=130;
            Typ="HLcache *";
          };
        };
        {
          *** Methode ***;
          Doku="********************************************************************* \
          Implementierung der von IHapticAction geerbten Methoden*********************************************************************......................................................................./ \
          @brief\tRegistriert die Aktion für eine Shape bei HLAPI/ @param\tshapeID\tID \
          der Shape, für die die Aktion registriert werden soll.......................................................................";
          Name="registerAction";
          ID=131;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=132;
            Typ="HLuint";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tMeldet die Aktion für eine Shape bei HLAPI ab/ @param\tshapeID\tID \
          der Shape, für die die Aktion registriert wurde.......................................................................";
          Name="unregisterAction";
          ID=133;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=134;
            Typ="HLuint";
          };
        };
        {
          *** Assoziation ***;
          ID=135;
          Datentyp="HapticObject*";
          Zugriff=2;
          A=105;
          B=200;
          RollenName="m_pDragObj";
        };
        {
          *** Vererbung ***;
          Stereotype="implements";
          ID=136;
          A=105;
          B=235;
        };
      };
      {
        *** Klasse ***;
        Name="Edge";
        ID=137;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Edge.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Edge.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Vererbung ***;
          ID=138;
          A=137;
          B=200;
        };
      };
      {
        *** Klasse ***;
        Name="FrictionForceEffect";
        ID=139;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\FrictionForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\FrictionForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Gain";
          ID=140;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=141;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="FrictionForceEffect";
          ID=142;
          {
            *** Parameter ***;
            Name="magnitude";
            ID=143;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="gain";
            ID=144;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=145;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setGain";
          ID=146;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=147;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=148;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=149;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~FrictionForceEffect";
          ID=150;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=151;
          A=139;
          B=190;
        };
      };
      {
        *** Klasse ***;
        Name="GraphScene";
        ID=152;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\GraphScene.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\GraphScene.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="GraphScene";
          ID=153;
        };
        {
          *** Methode ***;
          Name="addObject";
          ID=154;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="obj";
            ID=155;
            Typ="HapticObject *";
          };
        };
        {
          *** Methode ***;
          Name="initScene";
          ID=156;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderScene";
          ID=157;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="bHapticsEnabled";
            ID=158;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="renderSceneGraphics";
          ID=159;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderSceneHaptics";
          ID=160;
          Zugriff=1;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="bHapticsEnabled";
            ID=161;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="~GraphScene";
          ID=162;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=163;
          Datentyp="vector<HapticObject>";
          Zugriff=1;
          A=152;
          B=200;
          RollenName="m_SceneElements";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
      };
      {
        *** Klasse ***;
        Name="Grid";
        ID=164;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Grid.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Grid.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Vererbung ***;
          ID=165;
          A=164;
          B=200;
        };
      };
      {
        *** Klasse ***;
        Name="HapticConstraint";
        ID=166;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticConstraint.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticConstraint.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_HLConstraintID";
          ID=167;
          Datentyp="HLuint";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_SnapDistance";
          ID=168;
          Datentyp="HLfloat";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticConstraint";
          ID=171;
        };
        {
          *** Methode ***;
          Name="HapticConstraint";
          ID=169;
          {
            *** Parameter ***;
            Name="snapDist";
            ID=170;
            Typ="HLfloat";
          };
        };
        {
          *** Methode ***;
          Name="renderConstraint";
          ID=172;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setSnapDistance";
          ID=173;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=174;
            Typ="HLfloat";
          };
        };
        {
          *** Methode ***;
          Name="~HapticConstraint";
          ID=175;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticCursor";
        ID=176;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticCursor.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticCursor.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tSkalierungsfaktor, der je nach Projektion berechnet wird........................................................................";
          Name="m_Scale";
          ID=177;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tGröße des Cursors in Pixeln........................................................................";
          Name="m_SizePixels";
          ID=178;
          Datentyp="int";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./.......................................................................";
          Name="HapticCursor";
          ID=179;
          {
            *** Parameter ***;
            Name="sizePix";
            ID=180;
            Typ="int";
            Default="DEFAULT_CURSOR_SIZE_PIX";
          };
        };
        {
          *** Methode ***;
          Name="render";
          ID=181;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="scale";
          ID=182;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="~HapticCursor";
          ID=183;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticDevice";
        ID=184;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticDevice.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticDevice.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_hHLRenderingContext";
          ID=185;
          Datentyp="HHLRC";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_hHapticDevice";
          ID=186;
          Datentyp="HHD";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="initialize";
          ID=187;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="isActive";
          ID=188;
          RueckgabeWert="bool";
        };
        {
          *** Methode ***;
          Name="updateWorkspace";
          ID=189;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Name="HapticEffect";
        ID=190;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_EffectID";
          ID=191;
          Datentyp="HLuint";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_EffectType";
          ID=192;
          Datentyp="HLenum";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticEffect";
          ID=193;
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=194;
          IsAbstract=true;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="startEffect";
          ID=195;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="stopEffect";
          ID=196;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="triggerEffect";
          ID=197;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Doku="Millisekunden";
            Name="duration";
            ID=198;
            Typ="double";
            Default="100.0";
          };
        };
        {
          *** Methode ***;
          Name="~HapticEffect";
          ID=199;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticObject";
        ID=200;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticObject.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticObject.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_HLShapeID";
          ID=201;
          Datentyp="HLuint";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticObject";
          ID=202;
        };
        {
          *** Methode ***;
          Name="addGraphicMaterial";
          ID=203;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="material";
            ID=204;
            Typ="IGraphicMaterial *";
          };
        };
        {
          *** Methode ***;
          Name="addHapticAction";
          ID=205;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="act";
            ID=206;
            Typ="IHapticAction *";
          };
        };
        {
          *** Methode ***;
          Name="addHapticMaterial";
          ID=207;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="material";
            ID=208;
            Typ="IHapticMaterial *";
          };
        };
        {
          *** Methode ***;
          Name="getPosition";
          ID=209;
          RueckgabeWert="Position";
          RueckgabeWertID=279;
        };
        {
          *** Methode ***;
          Name="renderDefaultGraphicProperties";
          ID=210;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderDefaultHapticProperties";
          ID=211;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderGraphics";
          ID=212;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderHaptics";
          ID=213;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderShape";
          ID=214;
          IsAbstract=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setHapticConstraint";
          ID=215;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=216;
            Typ="const HapticConstraint*";
          };
        };
        {
          *** Methode ***;
          Name="~HapticObject";
          ID=217;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=218;
          Zugriff=2;
          A=200;
          B=233;
          RollenName="igraphicproperty";
        };
        {
          *** Assoziation ***;
          ID=219;
          Datentyp="vector<IGraphicProperty>";
          Zugriff=1;
          A=200;
          B=233;
          RollenName="m_graphicProperties";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=220;
          Datentyp="vector<IHapticProperty>";
          Zugriff=1;
          A=200;
          B=240;
          RollenName="m_hapticProperties";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=221;
          Datentyp="vector<IHapticAction>";
          Zugriff=1;
          A=200;
          B=235;
          RollenName="m_hapticActions";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=222;
          Datentyp="HapticConstraint*";
          Zugriff=1;
          A=200;
          B=166;
          RollenName="m_hapticConstraint";
          KardinalitaetAnfangsKlasse="0..1";
          KardinalitaetEndeKlasse="0..1";
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tAdapterklasse der eine Referenz zwischen Grafikobjekten der/\t\t\thaptischen \
        Szene und den Aufgaben herstellt./\t\t\t/\t\t\tJeder Node enthält eine \
        Referenz auf seine entsprechende/\t\t\tAufgabe um relevante Daten mit Ihr \
        auszutauschen/ @todo\tDefinition der abstrakten Adapter Methoden...............................................................................";
        Name="IBusinessAdapter";
        Stereotype="Interface";
        ID=223;
        Image="Interface";
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\IBusinessAdapter.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IBusinessAdapter.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Doku=".............................................................................../ \
          @brief\tLiefert die Kraft, die notwendig ist, um eine Aufgabe zu verschieben//\t\t\t1 \
          = keine Kraft/\t\t\t2 = lässt sich schwer bewegen/\t\t\t3 = lässt sich \
          gar nicht bewegen/\t\t\t0 = kann nicht berechnet werden/\t\t\t-1= Fehler...............................................................................";
          Name="getForce";
          ID=317;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="int";
        };
        {
          *** Methode ***;
          Name="getHeight";
          ID=318;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="getPosition";
          ID=319;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="Position";
          RueckgabeWertID=279;
        };
        {
          *** Methode ***;
          Name="getWidth";
          ID=320;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="float";
        };
        {
          *** Vererbung ***;
          ID=228;
          A=223;
          B=269;
        };
      };
      {
        *** Klasse ***;
        Name="IBusinessConverter";
        Stereotype="Interface";
        ID=229;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\IBusinessConverter.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IBusinessConverter.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="businessToViewCoordinates";
          ID=325;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="Position";
          RueckgabeWertID=279;
        };
        {
          *** Methode ***;
          Name="viewToBusinessCoordinates";
          ID=326;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="viewPosition";
            ID=327;
            Typ="Position";
            TypID=279;
          };
        };
      };
      {
        *** Klasse ***;
        Name="IGraphicMaterial";
        Stereotype="Interface";
        ID=233;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\GraphicalProperty.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\GraphicalProperty.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="renderProperty";
          ID=234;
          IsAbstract=true;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Name="IHapticAction";
        Stereotype="Interface";
        ID=235;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticAction.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticAction.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="registerAction";
          ID=236;
          IsAbstract=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=237;
            Typ="HLuint";
          };
        };
        {
          *** Methode ***;
          Name="unregisterAction";
          ID=238;
          IsAbstract=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=239;
            Typ="HLuint";
          };
        };
      };
      {
        *** Klasse ***;
        Name="IHapticMaterial";
        Stereotype="Interface";
        ID=240;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticProperty.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticProperty.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="renderProperty";
          ID=241;
          IsAbstract=true;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tSchnittstelle für  das Observer-Pattern//\t\t\tKlassen, die diese \
        Schnittstelle implementieren, können sich bei /\t\t\tObservables anmelden \
        um über Änderungen informiert zu werden...............................................................................";
        Name="IObserver";
        ID=242;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="IObserver.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IObserver.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
          Observable zu holen.......................................................................";
          Name="Update";
          ID=243;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObservable";
            ID=244;
            Typ="Observable *";
          };
        };
      };
      {
        *** Klasse ***;
        Doku="class Texture;class IBusinessAdapter;.............................................................................../ \
        @author\tKatharina Greiner, Matr.-Nr. 943471//\t@brief\tHaptisches Objekt, \
        das einen Knoten in einem Graphen darstellt................................................................................";
        Name="Node";
        ID=245;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\Node.cpp";
        HeaderFileName="genSource\\Node.h";
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tID der OpenGL-Displayliste, mit der der Node gezeichnet wird........................................................................";
          Name="m_DisplayList";
          ID=246;
          Datentyp="GLuint";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Height";
          ID=247;
          Datentyp="float";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Width";
          ID=248;
          Datentyp="float";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="Node";
          ID=249;
          {
            *** Parameter ***;
            Name="businessObj";
            ID=250;
            Typ="IBusinessAdapter *";
          };
        };
        {
          *** Methode ***;
          Doku="********************************************************************* \
          Von IObserver geerbte Methoden*********************************************************************......................................................................./ \
          @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
          Observable zu holen........................................................................";
          Name="Update";
          ID=251;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObservable";
            ID=252;
            Typ="Observable *";
          };
        };
        {
          *** Methode ***;
          Name="getHeight";
          ID=253;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="getWidth";
          ID=254;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="releaseDisplayList";
          ID=255;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................\t\tvoid \
          setTexture( const Texture* value );********************************************************************* \
          Von HapticObject geerbte Methoden*********************************************************************..............................................................................................................................................";
          Name="renderShape";
          ID=256;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setHeight";
          ID=257;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=258;
            Typ="float";
          };
        };
        {
          *** Methode ***;
          Name="setWidth";
          ID=259;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=260;
            Typ="float";
          };
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="translate";
          ID=261;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="x";
            ID=262;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=263;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=264;
            Typ="const double";
          };
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="~Node";
          ID=265;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=266;
          Datentyp="IBusinessAdapter*";
          Zugriff=1;
          A=245;
          B=223;
          RollenName="m_pBusinessObject";
        };
        {
          *** Vererbung ***;
          ID=267;
          A=245;
          B=200;
        };
        {
          *** Vererbung ***;
          Stereotype="implements";
          ID=268;
          A=245;
          B=242;
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tImplementiert das Observer-Pattern//\t\t\tKlassen, die von Observable \
        erben, können Objekte, die an ihrem Zustand/\t\t\tinteressiert sind über \
        Änderungen informieren ohne eine enge Bindung /\t\t\tzu ihnen zu haben................................................................................";
        Name="Observable";
        ID=269;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\Observable.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Observable.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tListe aller angemeldeten Observer........................................................................";
          Name="m_Observers";
          ID=270;
          Datentyp="list<IObserver*>";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tRegistriert einen neuen Obersver........................................................................";
          Name="AddObserver";
          ID=271;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObserver";
            ID=272;
            Typ="IObserver *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tInformiert alle Observer darüber, dass sich der Zustand des /\t\t\tObservables \
          geändert hat........................................................................";
          Name="NotifyAll";
          ID=273;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="Observable";
          ID=274;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tMeldet einen Observer beim Observable ab. Das Observer-Objekt/\t\t\twird \
          dabei nicht gelöscht........................................................................";
          Name="RemoveObserver";
          ID=275;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObserver";
            ID=276;
            Typ="IObserver *";
          };
        };
        {
          *** Methode ***;
          Name="~Observable";
          ID=277;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=278;
          Datentyp="list<IObserver>";
          Zugriff=2;
          A=269;
          B=242;
          RollenName="m_Observers";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
      };
      {
        *** Klasse ***;
        Name="Position";
        Stereotype="struct";
        ID=279;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Utilities.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Utilities.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="x";
          ID=280;
          Datentyp="double";
        };
        {
          *** Attribut ***;
          Name="y";
          ID=281;
          Datentyp="double";
        };
        {
          *** Attribut ***;
          Name="z";
          ID=282;
          Datentyp="double";
        };
        {
          *** Methode ***;
          Name="Position";
          ID=283;
          {
            *** Parameter ***;
            Name="x";
            ID=284;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=285;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=286;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="~Position";
          ID=287;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="Texture";
        ID=288;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Texture.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Texture.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
      };
      {
        *** Klasse ***;
        Name="ViscousForceEffect";
        ID=289;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\ViscousForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\ViscousForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Gain";
          ID=290;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=291;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="ViscousForceEffect";
          ID=292;
          {
            *** Parameter ***;
            Name="magnitude";
            ID=293;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="gain";
            ID=294;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=295;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setGain";
          ID=296;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=297;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=298;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=299;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~ViscousForceEffect";
          ID=300;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=301;
          A=289;
          B=190;
        };
      };
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\main.cpp";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\BusinessTask.cpp";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\BusinessTask.h";
      ActiveLine=-1;
    };
  };
};
