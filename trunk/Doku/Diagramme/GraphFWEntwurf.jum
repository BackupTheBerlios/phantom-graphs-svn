Jumli
{
  *** Applikation ***;
  Version=1.4;
  Elements=295;
  {
    *** Model ***;
    Typ=2;
    MainFile="main.cpp";
    ActiveDiagramm=16;
    {
      *** GenSettings ***;
      GetPrefix="Get";
      SetPrefix="Set";
      DBBaseClass="DbBasisObject";
      DBRecordSet="DbSet";
      GenerateWrite=true;
      GenerateRead=true;
    };
    {
      *** CompileDebugSettings ***;
      AufrufCompiler="g++";
      AufrufDebugger="gdb";
      DebugOptionen="-nw";
    };
    {
      *** Package ***;
      Name="UseCases";
      ID=3;
      Zugriff=2;
      Type=2;
      {
        *** Diagramm ***;
        Name="UseCases";
        ID=4;
        DiagrammTyp=2;
        {
          *** UseCaseZeichner ***;
          Rechteck=375,198,434,237;
          Order=-1;
          UMLElementID=5;
        };
        {
          *** UseCaseZeichner ***;
          Rechteck=376,309,435,348;
          Order=-1;
          UMLElementID=6;
        };
        {
          *** UseCaseZeichner ***;
          Rechteck=376,428,435,467;
          Order=-1;
          UMLElementID=7;
        };
        {
          *** ActorZeichner ***;
          Rechteck=93,290,132,349;
          Order=-1;
          UMLElementID=8;
        };
        {
          *** ActorZeichner ***;
          Rechteck=695,427,734,486;
          Order=-1;
          UMLElementID=12;
        };
        {
          *** SystemZeichner ***;
          Rechteck=213,127,609,598;
          Order=-1;
          UMLElementID=14;
        };
        {
          *** BeziehungZeichner ***;
          Rechteck=252,325,259,332;
          Order=-1;
          UMLElementID=9;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Order=-1;
          UMLElementID=10;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Rechteck=540,456,547,463;
          Order=-1;
          UMLElementID=13;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Order=-1;
          UMLElementID=11;
          TextOffset=0,5;
        };
      };
      {
        *** UseCase ***;
        Doku="Wird vom Layout Designer gestartet indem mit dem \nPhantom einer \
        oder mehrere Knoten markiert werden. \nSpießt der Layout Designer nun einen \
        der markierten \nKnoten auf, kann er an dem markierten Teilgraphen \nziehen. \
        Wendet er genügend Kraft an, wird der Teilgraph \naus dem ursprünglichen \
        Graphen gelöst.";
        Name="Teilgraph lösen";
        ID=5;
        Zugriff=2;
      };
      {
        *** UseCase ***;
        Doku="Der Layout Designer startet den Use Case indem er einen \nKnoten \
        mit dem Phantom aufspießt. Er kann den Knoten \nnun auf einem durch Constraints \
        vorgegebenen Gitter \nverschieben. Wie leicht sich der Knoten verschieben \
        \nlässt, hängt davon ab, wie eng der Knoten mit seinen \nNachbarn verbunden \
        ist. Das Verschieben eines Knotens \nwird beendet, wenn der Layout Designer \
        den Knoten mit \ndem Phantom wieder loslässt.";
        Name="Knoten verschieben";
        ID=6;
        Zugriff=2;
      };
      {
        *** UseCase ***;
        Doku="Der Betrachter startet den Use Case, indem er einen \nStartknoten \
        und einen Zielknoten auswählt und dann im \nMenü \"Kantenzug\" anklickt. \
        Das System setzt das \nPhantom an den Startknoten. Für Kanten, die zum \
        \nZielknoten führen, werden Constraints aktiviert, damit der\nBetrachter \
        zum Ziel geleitet wird. Der Use Case ist beendet,\nwenn das Phantom am \
        Zielknoten angekommen ist.";
        Name="Kantenzug";
        ID=7;
        Zugriff=2;
      };
      {
        *** Actor ***;
        Name="LayoutDesigner";
        ID=8;
        Zugriff=2;
        {
          *** Beziehung ***;
          ID=9;
          Zugriff=2;
          A=8;
          B=6;
        };
        {
          *** Beziehung ***;
          ID=10;
          Zugriff=2;
          A=8;
          B=5;
        };
        {
          *** Beziehung ***;
          ID=11;
          Zugriff=2;
          A=8;
          B=7;
        };
      };
      {
        *** Actor ***;
        Name="Betrachter";
        ID=12;
        Zugriff=2;
        {
          *** Beziehung ***;
          ID=13;
          Zugriff=2;
          A=12;
          B=7;
        };
      };
      {
        *** System ***;
        Name="HapticGraphFrameWork";
        ID=14;
      };
    };
    {
      *** Package ***;
      Name="GraphFWEntwurf";
      ID=15;
      Zugriff=2;
      {
        *** Diagramm ***;
        Name="GraphFWEntwurf";
        ID=16;
        {
          *** CJumliTracker ***;
          Rechteck=252,261,510,518;
          Order=-1;
          UMLElementID=223;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=740,394,898,464;
          Order=-1;
          UMLElementID=252;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=740,484,898,554;
          Order=-1;
          UMLElementID=259;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=734,578,898,665;
          Order=-1;
          UMLElementID=254;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=320,605,425,664;
          Order=-1;
          UMLElementID=160;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=612,30,841,151;
          Order=-1;
          UMLElementID=207;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=448,605,553,664;
          Order=-1;
          UMLElementID=187;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=384,22,513,160;
          Order=-1;
          UMLElementID=199;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=719,212,898,367;
          Order=-1;
          UMLElementID=189;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=31,17,231,172;
          Order=-1;
          UMLElementID=175;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=829,735,1072,924;
          Order=-1;
          UMLElementID=128;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=370,995,579,1133;
          Order=-1;
          UMLElementID=264;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=135,1014,248,1073;
          Order=-1;
          UMLElementID=261;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=36,1152,184,1211;
          Order=-1;
          UMLElementID=246;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=59,286,164,424;
          Order=-1;
          UMLElementID=274;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=485,728,654,900;
          Order=-1;
          UMLElementID=213;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=780,946,971,1101;
          Order=-1;
          UMLElementID=87;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=623,1126,792,1281;
          Order=-1;
          UMLElementID=162;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=60,1333,238,1454;
          Order=-1;
          UMLElementID=80;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=296,1361,537,1431;
          Order=-1;
          UMLElementID=249;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=840,1126,1009,1281;
          Order=-1;
          UMLElementID=284;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=111,545,291,802;
          Order=-1;
          UMLElementID=104;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=367,553,374,560;
          Order=-1;
          UMLElementID=161;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=471,565,478,572;
          Order=-1;
          UMLElementID=188;
          Knick=475,569;
          TextOffset=0,5;
          {
            *** Linie ***;
            Punkt=475,569;
          };
        };
        {
          *** VererbungZeichner ***;
          Rechteck=865,700,872,707;
          Order=-1;
          UMLElementID=159;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=248;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=661,915,668,922;
          Order=-1;
          UMLElementID=101;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=630,1109,637,1116;
          Order=-1;
          UMLElementID=174;
          Knick=634,1113;
          TextOffset=0,5;
          {
            *** Linie ***;
            Punkt=634,1113;
          };
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=296;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=125;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=199,834,206,841;
          Order=-1;
          UMLElementID=126;
          TextOffset=0,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=553,402,560,409;
          Order=-1;
          UMLElementID=242;
          Knick=542,398;
          TextOffset=0,5;
          OffsetRollenName=-52,-18;
          OffsetA=5,5;
          OffsetB=-3,3;
          {
            *** Linie ***;
            Punkt=542,398;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=519,473,529,490;
          Order=-1;
          UMLElementID=243;
          Knick=511,491;
          TextOffset=0,5;
          OffsetRollenName=-45,-19;
          OffsetA=5,5;
          OffsetB=-1,-31;
          {
            *** Linie ***;
            Punkt=511,491;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=530,517,540,534;
          Order=-1;
          UMLElementID=244;
          Knick=515,518;
          TextOffset=0,5;
          OffsetRollenName=-37,-18;
          OffsetA=5,5;
          OffsetB=6,-4;
          {
            *** Linie ***;
            Punkt=515,518;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=617,286,733,303;
          Order=-1;
          UMLElementID=245;
          Knick=515,307;
          TextOffset=0,5;
          OffsetRollenName=-38,-19;
          OffsetA=5,5;
          OffsetB=5,-1;
          {
            *** Linie ***;
            Punkt=515,307;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=259,222,375,239;
          Order=-1;
          UMLElementID=186;
          TextOffset=0,5;
          OffsetRollenName=69,-11;
          OffsetA=-10,2;
          OffsetB=5,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=482,551,558,568;
          Order=-1;
          UMLElementID=158;
          Knick=626,656;
          TextOffset=0,5;
          OffsetRollenName=-2,9;
          OffsetA=5,5;
          OffsetB=5,5;
          {
            *** Linie ***;
            Punkt=626,656;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=409,754,493,771;
          Order=-1;
          UMLElementID=273;
          TextOffset=0,5;
          OffsetRollenName=30,-17;
          OffsetA=5,5;
          OffsetB=5,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=84,929,91,936;
          Order=-1;
          UMLElementID=124;
          Knick=88,725;
          TextOffset=0,5;
          OffsetRollenName=-5,-14;
          OffsetA=5,5;
          OffsetB=5,5;
          {
            *** Linie ***;
            Punkt=88,725;
          };
        };
      };
      {
        *** Package ***;
        Name="genSource";
        ID=17;
        Zugriff=2;
        {
          *** Diagramm ***;
          Name="genSource";
          ID=18;
          {
            *** CJumliTracker ***;
            Rechteck=410,204,653,393;
            Order=-1;
            UMLElementID=19;
            IsWithAttributs=true;
            IsWithMethods=true;
            IsHideTaggedValue=true;
          };
          {
            *** CJumliTracker ***;
            Rechteck=38,214,247,335;
            Order=-1;
            UMLElementID=71;
            IsWithAttributs=true;
            IsWithMethods=true;
            IsHideTaggedValue=true;
          };
          {
            *** CJumliTracker ***;
            Rechteck=102,430,215,489;
            Order=-1;
            UMLElementID=53;
            IsWithAttributs=true;
            IsWithMethods=true;
            IsHideTaggedValue=true;
          };
          {
            *** CJumliTracker ***;
            Rechteck=337,457,485,516;
            Order=-1;
            UMLElementID=51;
            IsWithAttributs=true;
            IsWithMethods=true;
            IsHideTaggedValue=true;
          };
          {
            *** CJumliTracker ***;
            Rechteck=42,51,197,189;
            Order=-1;
            UMLElementID=56;
            IsWithAttributs=true;
            IsWithMethods=true;
            IsHideTaggedValue=true;
          };
        };
        {
          *** Klasse ***;
          Doku=".............................................................................../ \
          @brief\tEine Eventhandlerklasse die es ermöglicht, haptische Objekte mit \
          dem /\t\t\tPhantom zu bewegen/\t\t\t/\t\t\tDer Eventhandler reagiert auf \
          die folgende Events:/\t\t\t- der vordere Phantom-Button wird gedrückt, \
          wenn ein Objekt mit dem /\t\t\t  Phantom berührt wird/\t\t\t- das Phantom \
          wird mit gedrücktem Button bewegt/\t\t\t- der vordere Phantom-Button wird \
          losgelassen/\t\t\tWirkung: Solange der Button gedrückt gehalten wird, folgt \
          das /\t\t\tregistrierte Objekt der Bewegung des Phantom/ @todo\tObjekte \
          lassen sich noch nicht nach hinten verschieben...............................................................................";
          Name="DragObjectHandler";
          ID=19;
          Datentyp="class";
          Zugriff=3;
          KomponentenId=-1;
          FileName="genSource\\DragObjectHandler.cpp";
          FileActiveLine=-1;
          HeaderFileName="genSource\\DragObjectHandler.h";
          HeaderFileActiveLine=-1;
          Parent=-1;
          {
            *** Attribut ***;
            Doku="......................................................................./ \
            Position des Proxy beim letzten Aufruf des Draghandlers/ Dient zur Berechnung \
            des Vektors um den das Objekt verschoben werden soll";
            Name="m_LastProxyPos";
            ID=20;
            Datentyp="hduVector3Dd";
            Zugriff=1;
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tKonstruktor, initialisiert das Eventhandler-Objekt mit dem /\t\t\tzugehörigen \
            haptischen Objekt/ @param\tpObj\tPointer auf das haptische Objekt für das \
            der /\t\t\t\t\tEventhandler zuständig sein soll.......................................................................";
            Name="DragObjectHandler";
            ID=21;
            {
              *** Parameter ***;
              Name="pObj";
              ID=22;
              Typ="HapticObject *";
            };
          };
          {
            *** Methode ***;
            Doku="/ @brief\t(HLAPI-Callbackfunktion) Started das Draggen des Objekts/ \
            @param\tevent\tGibt an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion \
            aufgerufen werden soll, hier HL_EVENT_1BUTTONDOWN/\t@param\tshapeID\tDie \
            ShapeID des Objekts, das bewegt werden soll/ @param\tthread\tGibt an, in \
            welchem HLAPI-Thread das Event behandelt /\t\t\t\t\twerden soll, in diesem \
            Fall HL_CLIENT_THREAD/ @param\tcache\tHLAPI-State Schnappschuss in dem \
            Moment, in dem das Event feuert/ @param\tpHandlerObject\tPointer auf das \
            DragObjectHandler-Objekt, das/\t\t\t\t\tdas Event verarbeiten soll.......................................................................";
            Name="OnButtonDown";
            ID=23;
            IsStatic=true;
            Zugriff=1;
            RueckgabeWert="void HLCALLBACK";
            {
              *** Parameter ***;
              Name="event";
              ID=24;
              Typ="HLenum";
            };
            {
              *** Parameter ***;
              Name="shapeID";
              ID=25;
              Typ="HLuint";
            };
            {
              *** Parameter ***;
              Name="thread";
              ID=26;
              Typ="HLenum";
            };
            {
              *** Parameter ***;
              Name="cache";
              ID=27;
              Typ="HLcache *";
            };
            {
              *** Parameter ***;
              Name="pHandlerObject";
              ID=28;
              Typ="void *";
            };
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\t(HLAPI-Callbackfunktion) Beendet das Draggen des Objekts/ @param\tevent\tGibt \
            an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
            werden soll, hier HL_EVENT_1BUTTONUP/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
            angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
            Event behandelt/\t\t\t\t\t werden soll, in diesem Fall HL_CLIENT_THREAD/ \
            @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
            feuert/ @param\tuserdata\tWird von dieser Funktion nicht benötigt.......................................................................";
            Name="OnButtonUp";
            ID=29;
            IsStatic=true;
            Zugriff=1;
            RueckgabeWert="void HLCALLBACK";
            {
              *** Parameter ***;
              Name="event";
              ID=30;
              Typ="HLenum";
            };
            {
              *** Parameter ***;
              Name="shapeID";
              ID=31;
              Typ="HLuint";
            };
            {
              *** Parameter ***;
              Name="thread";
              ID=32;
              Typ="HLenum";
            };
            {
              *** Parameter ***;
              Name="cache";
              ID=33;
              Typ="HLcache *";
            };
            {
              *** Parameter ***;
              Name="userdata";
              ID=34;
              Typ="void *";
            };
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\t(HLAPI-Callbackfunktion) Steuert das Draggen des Objekts/ @param\tevent\tGibt \
            an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
            werden soll, hier HL_EVENT_MOTION/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
            angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
            Event behandelt/\t\t\t\t\twerden soll, in diesem Fall HL_CLIENT_THREAD/ \
            @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
            feuert/ @param\tpHandlerObject\tPointer auf das DragObjectHandler-Objekt, \
            das/\t\t\t\t\t das Event verarbeiten soll.......................................................................";
            Name="OnDrag";
            ID=35;
            IsStatic=true;
            Zugriff=1;
            RueckgabeWert="void HLCALLBACK";
            {
              *** Parameter ***;
              Name="event";
              ID=36;
              Typ="HLenum";
            };
            {
              *** Parameter ***;
              Name="shapeID";
              ID=37;
              Typ="HLuint";
            };
            {
              *** Parameter ***;
              Name="thread";
              ID=38;
              Typ="HLenum";
            };
            {
              *** Parameter ***;
              Name="cache";
              ID=39;
              Typ="HLcache *";
            };
            {
              *** Parameter ***;
              Name="pHandlerObject";
              ID=40;
              Typ="void *";
            };
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tVeranlasst das haptische Objekt, sich mit dem Proxy zu bewegen/ \
            @param\tpCache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
            feuert.......................................................................";
            Name="handleDrag";
            ID=41;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="pCache";
              ID=42;
              Typ="HLcache *";
            };
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tNimmt die Proxy-Position beim Starten des Drag-Vorgangs auf/ @param\tpCache\tHLAPI-State \
            Schnappschuss in dem Moment, in dem das Event feuert.......................................................................";
            Name="initAction";
            ID=43;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="pCache";
              ID=44;
              Typ="HLcache *";
            };
          };
          {
            *** Methode ***;
            Doku="********************************************************************* \
            Implementierung der von IHapticAction geerbten Methoden*********************************************************************......................................................................./ \
            @brief\tRegistriert die Aktion für eine Shape bei HLAPI/ @param\tshapeID\tID \
            der Shape, für die die Aktion registriert werden soll.......................................................................";
            Name="registerAction";
            ID=45;
            IsVirtual=true;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="shapeID";
              ID=46;
              Typ="HLuint";
            };
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tMeldet die Aktion für eine Shape bei HLAPI ab/ @param\tshapeID\tID \
            der Shape, für die die Aktion registriert wurde.......................................................................";
            Name="unregisterAction";
            ID=47;
            IsVirtual=true;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="shapeID";
              ID=48;
              Typ="HLuint";
            };
          };
          {
            *** Aggregation ***;
            Doku="......................................................................./ \
            Das Objekt, dem der Eventhandler zugeordnet ist.......................................................................";
            ID=49;
            Datentyp="HapticObject *";
            Zugriff=1;
            A=19;
            B=223;
            RollenName="m_pDragObj";
          };
          {
            *** Vererbung ***;
            ID=50;
            A=19;
            B=254;
            BasisKlasse="IHapticAction";
          };
        };
        {
          *** Klasse ***;
          Doku=".............................................................................../ \
          @brief\tAdapterklasse der eine Referenz zwischen Grafikobjekten der/\t\t\thaptischen \
          Szene und den Aufgaben herstellt./\t\t\t/\t\t\tJeder Node enthält eine \
          Referenz auf seine entsprechende/\t\t\tAufgabe um relevante Daten mit Ihr \
          auszutauschen/ @todo\tDefinition der abstrakten Adapter Methoden...............................................................................";
          Name="IBusinessAdapter";
          ID=51;
          Datentyp="class";
          Zugriff=3;
          KomponentenId=-1;
          FileActiveLine=-1;
          HeaderFileName="genSource\\IBusinessAdapter.h";
          HeaderFileActiveLine=-1;
          Parent=-1;
          {
            *** Methode ***;
            Doku=".............................................................................../ \
            @brief\tLiefert die Kraft, die notwendig ist, um eine Aufgabe zu verschieben//\t\t\t1 \
            = keine Kraft/\t\t\t2 = lässt sich schwer bewegen/\t\t\t3 = lässt sich \
            gar nicht bewegen/\t\t\t0 = kann nicht berechnet werden/\t\t\t-1= Fehler...............................................................................";
            Name="getForce";
            ID=52;
            RueckgabeWert="int";
          };
        };
        {
          *** Klasse ***;
          Doku=".............................................................................../ \
          @brief\tSchnittstelle für  das Observer-Pattern//\t\t\tKlassen, die diese \
          Schnittstelle implementieren, können sich bei /\t\t\tObservables anmelden \
          um über Änderungen informiert zu werden...............................................................................";
          Name="IObserver";
          ID=53;
          Datentyp="class";
          Zugriff=3;
          KomponentenId=-1;
          FileActiveLine=-1;
          HeaderFileName="genSource\\IObserver.h";
          HeaderFileActiveLine=-1;
          Parent=-1;
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
            Observable zu holen.......................................................................";
            Name="Update";
            ID=54;
            IsAbstract=true;
            IsVirtual=true;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="pObservable";
              ID=55;
              Typ="Observable *";
            };
          };
        };
        {
          *** Klasse ***;
          Doku="class Texture;class IBusinessAdapter;.............................................................................../ \
          @author\tKatharina Greiner, Matr.-Nr. 943471//\t@brief\tHaptisches Objekt, \
          das einen Knoten in einem Graphen darstellt................................................................................";
          Name="Node";
          ID=56;
          Datentyp="class";
          Zugriff=3;
          KomponentenId=-1;
          FileName="genSource\\Node.cpp";
          HeaderFileName="genSource\\Node.h";
          Parent=-1;
          {
            *** Attribut ***;
            Doku="......................................................................./ \
            @brief\tID der OpenGL-Displayliste, mit der der Node gezeichnet wird........................................................................";
            Name="m_DisplayList";
            ID=57;
            Datentyp="GLuint";
            Zugriff=1;
          };
          {
            *** Methode ***;
            Doku="..............................................................................................................................................";
            Name="Node";
            ID=58;
            {
              *** Parameter ***;
              Name="businessObj";
              ID=59;
              Typ="IBusinessAdapter *";
            };
          };
          {
            *** Methode ***;
            Doku="********************************************************************* \
            Von IObserver geerbte Methoden*********************************************************************......................................................................./ \
            @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
            Observable zu holen........................................................................";
            Name="Update";
            ID=60;
            IsVirtual=true;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="pObservable";
              ID=61;
              Typ="Observable *";
            };
          };
          {
            *** Methode ***;
            Doku="..............................................................................................................................................\t\tvoid \
            setTexture( const Texture* value );********************************************************************* \
            Von HapticObject geerbte Methoden*********************************************************************..............................................................................................................................................";
            Name="renderShape";
            ID=62;
            IsVirtual=true;
            RueckgabeWert="void";
          };
          {
            *** Methode ***;
            Doku="..............................................................................................................................................";
            Name="translate";
            ID=63;
            IsVirtual=true;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="x";
              ID=64;
              Typ="const double";
            };
            {
              *** Parameter ***;
              Name="y";
              ID=65;
              Typ="const double";
            };
            {
              *** Parameter ***;
              Name="z";
              ID=66;
              Typ="const double";
            };
          };
          {
            *** Methode ***;
            Doku="..............................................................................................................................................";
            Name="~Node";
            ID=67;
            IsVirtual=true;
          };
          {
            *** Aggregation ***;
            Doku="..............................................................................................................................................";
            ID=68;
            Datentyp="IBusinessAdapter *";
            Zugriff=1;
            A=56;
            B=246;
            RollenName="m_pBusinessObject";
          };
          {
            *** Vererbung ***;
            ID=69;
            A=56;
            B=223;
            BasisKlasse="HapticObject";
          };
          {
            *** Vererbung ***;
            ID=70;
            A=56;
            B=261;
            BasisKlasse="IObserver";
          };
        };
        {
          *** Klasse ***;
          Doku=".............................................................................../ \
          @brief\tImplementiert das Observer-Pattern//\t\t\tKlassen, die von Observable \
          erben, können Objekte, die an ihrem Zustand/\t\t\tinteressiert sind über \
          Änderungen informieren ohne eine enge Bindung /\t\t\tzu ihnen zu haben................................................................................";
          Name="Observable";
          ID=71;
          Datentyp="class";
          Zugriff=3;
          KomponentenId=-1;
          FileName="genSource\\Observable.cpp";
          FileActiveLine=-1;
          HeaderFileName="genSource\\Observable.h";
          HeaderFileActiveLine=-1;
          Parent=-1;
          {
            *** Attribut ***;
            Doku="......................................................................./ \
            @brief\tListe aller angemeldeten Observer........................................................................";
            Name="m_Observers";
            ID=72;
            Datentyp="list<IObserver*>";
            Zugriff=1;
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tRegistriert einen neuen Obersver........................................................................";
            Name="AddObserver";
            ID=73;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="pObserver";
              ID=74;
              Typ="IObserver *";
            };
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tInformiert alle Observer darüber, dass sich der Zustand des /\t\t\tObservables \
            geändert hat........................................................................";
            Name="NotifyAll";
            ID=75;
            RueckgabeWert="void";
          };
          {
            *** Methode ***;
            Doku="..............................................................................................................................................";
            Name="Observable";
            ID=76;
          };
          {
            *** Methode ***;
            Doku="......................................................................./ \
            @brief\tMeldet einen Observer beim Observable ab. Das Observer-Objekt/\t\t\twird \
            dabei nicht gelöscht........................................................................";
            Name="RemoveObserver";
            ID=77;
            RueckgabeWert="void";
            {
              *** Parameter ***;
              Name="pObserver";
              ID=78;
              Typ="IObserver *";
            };
          };
        };
      };
      {
        *** Klasse ***;
        ID=79;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileActiveLine=-1;
        HeaderFileActiveLine=-1;
        Parent=-1;
      };
      {
        *** Klasse ***;
        Name="AppConfiguration";
        ID=80;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\AppConfiguration.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\AppConfiguration.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_ProjectDuration";
          ID=81;
          Datentyp="int";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="AppConfiguration";
          ID=82;
        };
        {
          *** Methode ***;
          Name="getProjectDuration";
          ID=83;
          RueckgabeWert="int";
        };
        {
          *** Methode ***;
          Name="setProjectDuration";
          ID=84;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=85;
            Typ="int";
          };
        };
        {
          *** Methode ***;
          Name="~AppConfiguration";
          ID=86;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="ConstantForceEffect";
        ID=87;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\ConstantForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\ConstantForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Direction";
          ID=88;
          Datentyp="hduVector3Dd";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=89;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="ConstantForceEffect";
          ID=90;
          {
            *** Parameter ***;
            Name="direction[3]";
            ID=91;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="magnitude";
            ID=92;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=93;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setDirection";
          ID=94;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="x";
            ID=95;
            Typ="double";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=96;
            Typ="double";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=97;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=98;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=99;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~ConstantForceEffect";
          ID=100;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=101;
          A=87;
          B=213;
        };
      };
      {
        *** Klasse ***;
        Name="Copy of Grid";
        ID=102;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Grid.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Grid.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
      };
      {
        *** Klasse ***;
        Name="Copy of HapticCursor";
        ID=103;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="HapticCursor.cpp";
        FileActiveLine=-1;
        HeaderFileName="HapticCursor.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
      };
      {
        *** Klasse ***;
        Name="Copy of Texture";
        ID=127;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Texture.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Texture.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tEine Eventhandlerklasse die es ermöglicht, haptische Objekte mit \
        dem /\t\t\tPhantom zu bewegen/\t\t\t/\t\t\tDer Eventhandler reagiert auf \
        die folgende Events:/\t\t\t- der vordere Phantom-Button wird gedrückt, \
        wenn ein Objekt mit dem /\t\t\t  Phantom berührt wird/\t\t\t- das Phantom \
        wird mit gedrücktem Button bewegt/\t\t\t- der vordere Phantom-Button wird \
        losgelassen/\t\t\tWirkung: Solange der Button gedrückt gehalten wird, folgt \
        das /\t\t\tregistrierte Objekt der Bewegung des Phantom/ @todo\tObjekte \
        lassen sich noch nicht nach hinten verschieben...............................................................................";
        Name="DragObjectHandler";
        ID=128;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\DragObjectHandler.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\DragObjectHandler.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          Position des Proxy beim letzten Aufruf des Draghandlers/ Dient zur Berechnung \
          des Vektors um den das Objekt verschoben werden soll";
          Name="m_LastProxyPos";
          ID=129;
          Datentyp="hduVector3Dd";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tKonstruktor, initialisiert das Eventhandler-Objekt mit dem /\t\t\tzugehörigen \
          haptischen Objekt/ @param\tpObj\tPointer auf das haptische Objekt für das \
          der /\t\t\t\t\tEventhandler zuständig sein soll.......................................................................";
          Name="DragObjectHandler";
          ID=130;
          {
            *** Parameter ***;
            Name="pObj";
            ID=131;
            Typ="HapticObject *";
          };
        };
        {
          *** Methode ***;
          Doku="/ @brief\t(HLAPI-Callbackfunktion) Started das Draggen des Objekts/ \
          @param\tevent\tGibt an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion \
          aufgerufen werden soll, hier HL_EVENT_1BUTTONDOWN/\t@param\tshapeID\tDie \
          ShapeID des Objekts, das bewegt werden soll/ @param\tthread\tGibt an, in \
          welchem HLAPI-Thread das Event behandelt /\t\t\t\t\twerden soll, in diesem \
          Fall HL_CLIENT_THREAD/ @param\tcache\tHLAPI-State Schnappschuss in dem \
          Moment, in dem das Event feuert/ @param\tpHandlerObject\tPointer auf das \
          DragObjectHandler-Objekt, das/\t\t\t\t\tdas Event verarbeiten soll.......................................................................";
          Name="OnButtonDown";
          ID=132;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=133;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=134;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=135;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=136;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="pHandlerObject";
            ID=137;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\t(HLAPI-Callbackfunktion) Beendet das Draggen des Objekts/ @param\tevent\tGibt \
          an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
          werden soll, hier HL_EVENT_1BUTTONUP/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
          angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
          Event behandelt/\t\t\t\t\t werden soll, in diesem Fall HL_CLIENT_THREAD/ \
          @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert/ @param\tuserdata\tWird von dieser Funktion nicht benötigt.......................................................................";
          Name="OnButtonUp";
          ID=138;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=139;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=140;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=141;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=142;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="userdata";
            ID=143;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\t(HLAPI-Callbackfunktion) Steuert das Draggen des Objekts/ @param\tevent\tGibt \
          an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
          werden soll, hier HL_EVENT_MOTION/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
          angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
          Event behandelt/\t\t\t\t\twerden soll, in diesem Fall HL_CLIENT_THREAD/ \
          @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert/ @param\tpHandlerObject\tPointer auf das DragObjectHandler-Objekt, \
          das/\t\t\t\t\t das Event verarbeiten soll.......................................................................";
          Name="OnDrag";
          ID=144;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=145;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=146;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=147;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=148;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="pHandlerObject";
            ID=149;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tVeranlasst das haptische Objekt, sich mit dem Proxy zu bewegen/ \
          @param\tpCache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert.......................................................................";
          Name="handleDrag";
          ID=150;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pCache";
            ID=151;
            Typ="HLcache *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tNimmt die Proxy-Position beim Starten des Drag-Vorgangs auf/ @param\tpCache\tHLAPI-State \
          Schnappschuss in dem Moment, in dem das Event feuert.......................................................................";
          Name="initAction";
          ID=152;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pCache";
            ID=153;
            Typ="HLcache *";
          };
        };
        {
          *** Methode ***;
          Doku="********************************************************************* \
          Implementierung der von IHapticAction geerbten Methoden*********************************************************************......................................................................./ \
          @brief\tRegistriert die Aktion für eine Shape bei HLAPI/ @param\tshapeID\tID \
          der Shape, für die die Aktion registriert werden soll.......................................................................";
          Name="registerAction";
          ID=154;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=155;
            Typ="HLuint";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tMeldet die Aktion für eine Shape bei HLAPI ab/ @param\tshapeID\tID \
          der Shape, für die die Aktion registriert wurde.......................................................................";
          Name="unregisterAction";
          ID=156;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=157;
            Typ="HLuint";
          };
        };
        {
          *** Assoziation ***;
          ID=158;
          Datentyp="HapticObject*";
          Zugriff=2;
          A=128;
          B=223;
          RollenName="m_pDragObj";
        };
        {
          *** Vererbung ***;
          Stereotype="implements";
          ID=159;
          A=128;
          B=254;
        };
      };
      {
        *** Klasse ***;
        Name="Edge";
        ID=160;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Edge.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Edge.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Vererbung ***;
          ID=161;
          A=160;
          B=223;
        };
      };
      {
        *** Klasse ***;
        Name="FrictionForceEffect";
        ID=162;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\FrictionForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\FrictionForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Gain";
          ID=163;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=164;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="FrictionForceEffect";
          ID=165;
          {
            *** Parameter ***;
            Name="magnitude";
            ID=166;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="gain";
            ID=167;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=168;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setGain";
          ID=169;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=170;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=171;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=172;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~FrictionForceEffect";
          ID=173;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=174;
          A=162;
          B=213;
        };
      };
      {
        *** Klasse ***;
        Name="GraphScene";
        ID=175;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\GraphScene.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\GraphScene.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="GraphScene";
          ID=176;
        };
        {
          *** Methode ***;
          Name="addObject";
          ID=177;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="obj";
            ID=178;
            Typ="HapticObject *";
          };
        };
        {
          *** Methode ***;
          Name="initScene";
          ID=179;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderScene";
          ID=180;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="bHapticsEnabled";
            ID=181;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="renderSceneGraphics";
          ID=182;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderSceneHaptics";
          ID=183;
          Zugriff=1;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="bHapticsEnabled";
            ID=184;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="~GraphScene";
          ID=185;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=186;
          Datentyp="vector<HapticObject>";
          Zugriff=1;
          A=175;
          B=223;
          RollenName="m_SceneElements";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
      };
      {
        *** Klasse ***;
        Name="Grid";
        ID=187;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Grid.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Grid.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Vererbung ***;
          ID=188;
          A=187;
          B=223;
        };
      };
      {
        *** Klasse ***;
        Name="HapticConstraint";
        ID=189;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticConstraint.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticConstraint.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_HLConstraintID";
          ID=190;
          Datentyp="HLuint";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_SnapDistance";
          ID=191;
          Datentyp="HLfloat";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticConstraint";
          ID=193;
          {
            *** Parameter ***;
            Name="snapDist";
            ID=194;
            Typ="HLfloat";
          };
        };
        {
          *** Methode ***;
          Name="HapticConstraint";
          ID=192;
        };
        {
          *** Methode ***;
          Name="renderConstraint";
          ID=195;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setSnapDistance";
          ID=196;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=197;
            Typ="HLfloat";
          };
        };
        {
          *** Methode ***;
          Name="~HapticConstraint";
          ID=198;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticCursor";
        ID=199;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticCursor.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticCursor.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tSkalierungsfaktor, der je nach Projektion berechnet wird........................................................................";
          Name="m_Scale";
          ID=200;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tGröße des Cursors in Pixeln........................................................................";
          Name="m_SizePixels";
          ID=201;
          Datentyp="int";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./.......................................................................";
          Name="HapticCursor";
          ID=202;
          {
            *** Parameter ***;
            Name="sizePix";
            ID=203;
            Typ="int";
            Default="DEFAULT_CURSOR_SIZE_PIX";
          };
        };
        {
          *** Methode ***;
          Name="render";
          ID=204;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="scale";
          ID=205;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="~HapticCursor";
          ID=206;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticDevice";
        ID=207;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticDevice.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticDevice.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_hHLRenderingContext";
          ID=208;
          Datentyp="HHLRC";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_hHapticDevice";
          ID=209;
          Datentyp="HHD";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="initialize";
          ID=210;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="isActive";
          ID=211;
          RueckgabeWert="bool";
        };
        {
          *** Methode ***;
          Name="updateWorkspace";
          ID=212;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Name="HapticEffect";
        ID=213;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_EffectID";
          ID=214;
          Datentyp="HLuint";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_EffectType";
          ID=215;
          Datentyp="HLenum";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticEffect";
          ID=216;
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=217;
          IsAbstract=true;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="startEffect";
          ID=218;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="stopEffect";
          ID=219;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="triggerEffect";
          ID=220;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Doku="Millisekunden";
            Name="duration";
            ID=221;
            Typ="double";
            Default="100.0";
          };
        };
        {
          *** Methode ***;
          Name="~HapticEffect";
          ID=222;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticObject";
        ID=223;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticObject.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticObject.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_HLShapeID";
          ID=224;
          Datentyp="HLuint";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticObject";
          ID=225;
        };
        {
          *** Methode ***;
          Name="addGraphicMaterial";
          ID=226;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="material";
            ID=227;
            Typ="IGraphicMaterial *";
          };
        };
        {
          *** Methode ***;
          Name="addHapticAction";
          ID=228;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="act";
            ID=229;
            Typ="IHapticAction *";
          };
        };
        {
          *** Methode ***;
          Name="addHapticMaterial";
          ID=230;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="material";
            ID=231;
            Typ="IHapticMaterial *";
          };
        };
        {
          *** Methode ***;
          Name="getPosition";
          ID=232;
          RueckgabeWert="Position";
          RueckgabeWertID=274;
        };
        {
          *** Methode ***;
          Name="renderDefaultGraphicProperties";
          ID=233;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderDefaultHapticProperties";
          ID=234;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderGraphics";
          ID=235;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderHaptics";
          ID=236;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderShape";
          ID=237;
          IsAbstract=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setHapticConstraint";
          ID=238;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=239;
            Typ="const HapticConstraint*";
          };
        };
        {
          *** Methode ***;
          Name="~HapticObject";
          ID=240;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=241;
          Zugriff=2;
          A=223;
          B=252;
          RollenName="igraphicproperty";
        };
        {
          *** Assoziation ***;
          ID=242;
          Datentyp="vector<IGraphicProperty>";
          Zugriff=1;
          A=223;
          B=252;
          RollenName="m_graphicProperties";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=243;
          Datentyp="vector<IHapticProperty>";
          Zugriff=1;
          A=223;
          B=259;
          RollenName="m_hapticProperties";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=244;
          Datentyp="vector<IHapticAction>";
          Zugriff=1;
          A=223;
          B=254;
          RollenName="m_hapticActions";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=245;
          Datentyp="HapticConstraint*";
          Zugriff=1;
          A=223;
          B=189;
          RollenName="m_hapticConstraint";
          KardinalitaetAnfangsKlasse="0..1";
          KardinalitaetEndeKlasse="0..1";
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tAdapterklasse der eine Referenz zwischen Grafikobjekten der/\t\t\thaptischen \
        Szene und den Aufgaben herstellt./\t\t\t/\t\t\tJeder Node enthält eine \
        Referenz auf seine entsprechende/\t\t\tAufgabe um relevante Daten mit Ihr \
        auszutauschen/ @todo\tDefinition der abstrakten Adapter Methoden...............................................................................";
        Name="IBusinessAdapter";
        ID=246;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="IBusinessAdapter.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IBusinessAdapter.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Doku=".............................................................................../ \
          @brief\tLiefert die Kraft, die notwendig ist, um eine Aufgabe zu verschieben//\t\t\t1 \
          = keine Kraft/\t\t\t2 = lässt sich schwer bewegen/\t\t\t3 = lässt sich \
          gar nicht bewegen/\t\t\t0 = kann nicht berechnet werden/\t\t\t-1= Fehler...............................................................................";
          Name="getForce";
          ID=247;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="int";
        };
        {
          *** Vererbung ***;
          ID=248;
          A=246;
          B=264;
        };
      };
      {
        *** Klasse ***;
        Name="IBusinessConverter";
        ID=249;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\IBusinessConverter.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IBusinessConverter.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="businessToViewCoordinates";
          ID=250;
          IsAbstract=true;
          IsStatic=true;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="viewToBusinessCoordinates";
          ID=251;
          IsAbstract=true;
          IsStatic=true;
          IsVirtual=true;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Name="IGraphicMaterial";
        Stereotype="Interface";
        ID=252;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\GraphicalProperty.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\GraphicalProperty.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="renderProperty";
          ID=253;
          IsAbstract=true;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Name="IHapticAction";
        Stereotype="Interface";
        ID=254;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticAction.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticAction.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="registerAction";
          ID=255;
          IsAbstract=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=256;
            Typ="HLuint";
          };
        };
        {
          *** Methode ***;
          Name="unregisterAction";
          ID=257;
          IsAbstract=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=258;
            Typ="HLuint";
          };
        };
      };
      {
        *** Klasse ***;
        Name="IHapticMaterial";
        Stereotype="Interface";
        ID=259;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticProperty.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticProperty.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="renderProperty";
          ID=260;
          IsAbstract=true;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tSchnittstelle für  das Observer-Pattern//\t\t\tKlassen, die diese \
        Schnittstelle implementieren, können sich bei /\t\t\tObservables anmelden \
        um über Änderungen informiert zu werden...............................................................................";
        Name="IObserver";
        ID=261;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="IObserver.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IObserver.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
          Observable zu holen.......................................................................";
          Name="Update";
          ID=262;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObservable";
            ID=263;
            Typ="Observable *";
          };
        };
      };
      {
        *** Klasse ***;
        Doku="class Texture;class IBusinessAdapter;.............................................................................../ \
        @author\tKatharina Greiner, Matr.-Nr. 943471//\t@brief\tHaptisches Objekt, \
        das einen Knoten in einem Graphen darstellt................................................................................";
        Name="Node";
        ID=104;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\Node.cpp";
        HeaderFileName="genSource\\Node.h";
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tID der OpenGL-Displayliste, mit der der Node gezeichnet wird........................................................................";
          Name="m_DisplayList";
          ID=321;
          Datentyp="GLuint";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Height";
          ID=322;
          Datentyp="float";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Width";
          ID=323;
          Datentyp="float";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="Node";
          ID=324;
          {
            *** Parameter ***;
            Name="businessObj";
            ID=325;
            Typ="IBusinessAdapter *";
          };
        };
        {
          *** Methode ***;
          Doku="********************************************************************* \
          Von IObserver geerbte Methoden*********************************************************************......................................................................./ \
          @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
          Observable zu holen........................................................................";
          Name="Update";
          ID=326;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObservable";
            ID=327;
            Typ="Observable *";
          };
        };
        {
          *** Methode ***;
          Name="getHeight";
          ID=328;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="getWidth";
          ID=329;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="releaseDisplayList";
          ID=340;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................\t\tvoid \
          setTexture( const Texture* value );********************************************************************* \
          Von HapticObject geerbte Methoden*********************************************************************..............................................................................................................................................";
          Name="renderShape";
          ID=330;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setHeight";
          ID=331;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=332;
            Typ="float";
          };
        };
        {
          *** Methode ***;
          Name="setWidth";
          ID=333;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=334;
            Typ="float";
          };
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="translate";
          ID=335;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="x";
            ID=336;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=337;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=338;
            Typ="const double";
          };
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="~Node";
          ID=339;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=124;
          Datentyp="IBusinessAdapter*";
          Zugriff=1;
          A=104;
          B=246;
          RollenName="m_pBusinessObject";
        };
        {
          *** Vererbung ***;
          ID=125;
          A=104;
          B=223;
        };
        {
          *** Vererbung ***;
          Stereotype="implements";
          ID=126;
          A=104;
          B=261;
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tImplementiert das Observer-Pattern//\t\t\tKlassen, die von Observable \
        erben, können Objekte, die an ihrem Zustand/\t\t\tinteressiert sind über \
        Änderungen informieren ohne eine enge Bindung /\t\t\tzu ihnen zu haben................................................................................";
        Name="Observable";
        ID=264;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\Observable.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Observable.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tListe aller angemeldeten Observer........................................................................";
          Name="m_Observers";
          ID=265;
          Datentyp="list<IObserver*>";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tRegistriert einen neuen Obersver........................................................................";
          Name="AddObserver";
          ID=266;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObserver";
            ID=267;
            Typ="IObserver *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tInformiert alle Observer darüber, dass sich der Zustand des /\t\t\tObservables \
          geändert hat........................................................................";
          Name="NotifyAll";
          ID=268;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="Observable";
          ID=269;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tMeldet einen Observer beim Observable ab. Das Observer-Objekt/\t\t\twird \
          dabei nicht gelöscht........................................................................";
          Name="RemoveObserver";
          ID=270;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObserver";
            ID=271;
            Typ="IObserver *";
          };
        };
        {
          *** Methode ***;
          Name="~Observable";
          ID=272;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=273;
          Datentyp="list<IObserver>";
          Zugriff=2;
          A=264;
          B=261;
          RollenName="m_Observers";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
      };
      {
        *** Klasse ***;
        Name="Position";
        Stereotype="struct";
        ID=274;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Utilities.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Utilities.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="x";
          ID=275;
          Datentyp="double";
        };
        {
          *** Attribut ***;
          Name="y";
          ID=276;
          Datentyp="double";
        };
        {
          *** Attribut ***;
          Name="z";
          ID=277;
          Datentyp="double";
        };
        {
          *** Methode ***;
          Name="Position";
          ID=278;
          {
            *** Parameter ***;
            Name="x";
            ID=279;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=280;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=281;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="~Position";
          ID=282;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="Texture";
        ID=283;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Texture.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Texture.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
      };
      {
        *** Klasse ***;
        Name="ViscousForceEffect";
        ID=284;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\ViscousForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\ViscousForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Gain";
          ID=285;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=286;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="ViscousForceEffect";
          ID=287;
          {
            *** Parameter ***;
            Name="magnitude";
            ID=288;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="gain";
            ID=289;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=290;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setGain";
          ID=291;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=292;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=293;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=294;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~ViscousForceEffect";
          ID=295;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=296;
          A=284;
          B=213;
        };
      };
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\main.cpp";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\Node.cpp";
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\Node.h";
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\ConstantForceEffect.cpp";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\ConstantForceEffect.h";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\IBusinessConverter.cpp";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\Utilities.cpp";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="D:\\FHW\\WS05-06\\Visualisierung\\Projekt\\Doku\\Diagramme\\genSource\\Utilities.h";
      ActiveLine=-1;
    };
  };
};
