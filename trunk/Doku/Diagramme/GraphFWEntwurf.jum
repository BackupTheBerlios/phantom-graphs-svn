Jumli
{
  *** Applikation ***;
  Version=1.4;
  Elements=269;
  {
    *** Model ***;
    Typ=2;
    MainFile="main.cpp";
    ActiveDiagramm=16;
    {
      *** GenSettings ***;
      GetPrefix="Get";
      SetPrefix="Set";
      DBBaseClass="DbBasisObject";
      DBRecordSet="DbSet";
      GenerateWrite=true;
      GenerateRead=true;
    };
    {
      *** CompileDebugSettings ***;
      AufrufCompiler="g++";
      AufrufDebugger="gdb";
      DebugOptionen="-nw";
    };
    {
      *** Package ***;
      Name="UseCases";
      ID=3;
      Zugriff=2;
      Type=2;
      {
        *** Diagramm ***;
        Name="UseCases";
        ID=4;
        DiagrammTyp=2;
        {
          *** UseCaseZeichner ***;
          Rechteck=375,198,434,237;
          Order=-1;
          UMLElementID=5;
        };
        {
          *** UseCaseZeichner ***;
          Rechteck=376,309,435,348;
          Order=-1;
          UMLElementID=6;
        };
        {
          *** UseCaseZeichner ***;
          Rechteck=376,428,435,467;
          Order=-1;
          UMLElementID=7;
        };
        {
          *** ActorZeichner ***;
          Rechteck=93,290,132,349;
          Order=-1;
          UMLElementID=8;
        };
        {
          *** ActorZeichner ***;
          Rechteck=695,427,734,486;
          Order=-1;
          UMLElementID=12;
        };
        {
          *** SystemZeichner ***;
          Rechteck=213,127,609,598;
          Order=-1;
          UMLElementID=14;
        };
        {
          *** BeziehungZeichner ***;
          Rechteck=252,325,259,332;
          Order=-1;
          UMLElementID=9;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Order=-1;
          UMLElementID=10;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Rechteck=540,456,547,463;
          Order=-1;
          UMLElementID=13;
          TextOffset=0,5;
        };
        {
          *** BeziehungZeichner ***;
          Order=-1;
          UMLElementID=11;
          TextOffset=0,5;
        };
      };
      {
        *** UseCase ***;
        Doku="Wird vom Layout Designer gestartet indem mit dem \nPhantom einer \
        oder mehrere Knoten markiert werden. \nSpießt der Layout Designer nun einen \
        der markierten \nKnoten auf, kann er an dem markierten Teilgraphen \nziehen. \
        Wendet er genügend Kraft an, wird der Teilgraph \naus dem ursprünglichen \
        Graphen gelöst.";
        Name="Teilgraph lösen";
        ID=5;
        Zugriff=2;
      };
      {
        *** UseCase ***;
        Doku="Der Layout Designer startet den Use Case indem er einen \nKnoten \
        mit dem Phantom aufspießt. Er kann den Knoten \nnun auf einem durch Constraints \
        vorgegebenen Gitter \nverschieben. Wie leicht sich der Knoten verschieben \
        \nlässt, hängt davon ab, wie eng der Knoten mit seinen \nNachbarn verbunden \
        ist. Das Verschieben eines Knotens \nwird beendet, wenn der Layout Designer \
        den Knoten mit \ndem Phantom wieder loslässt.";
        Name="Knoten verschieben";
        ID=6;
        Zugriff=2;
      };
      {
        *** UseCase ***;
        Doku="Der Betrachter startet den Use Case, indem er einen \nStartknoten \
        und einen Zielknoten auswählt und dann im \nMenü \"Kantenzug\" anklickt. \
        Das System setzt das \nPhantom an den Startknoten. Für Kanten, die zum \
        \nZielknoten führen, werden Constraints aktiviert, damit der\nBetrachter \
        zum Ziel geleitet wird. Der Use Case ist beendet,\nwenn das Phantom am \
        Zielknoten angekommen ist.";
        Name="Kantenzug";
        ID=7;
        Zugriff=2;
      };
      {
        *** Actor ***;
        Name="LayoutDesigner";
        ID=8;
        Zugriff=2;
        {
          *** Beziehung ***;
          ID=9;
          Zugriff=2;
          A=8;
          B=6;
        };
        {
          *** Beziehung ***;
          ID=10;
          Zugriff=2;
          A=8;
          B=5;
        };
        {
          *** Beziehung ***;
          ID=11;
          Zugriff=2;
          A=8;
          B=7;
        };
      };
      {
        *** Actor ***;
        Name="Betrachter";
        ID=12;
        Zugriff=2;
        {
          *** Beziehung ***;
          ID=13;
          Zugriff=2;
          A=12;
          B=7;
        };
      };
      {
        *** System ***;
        Name="HapticGraphFrameWork";
        ID=14;
      };
    };
    {
      *** Package ***;
      Name="GraphFWEntwurf";
      ID=15;
      Zugriff=2;
      {
        *** Diagramm ***;
        Name="GraphFWEntwurf";
        ID=16;
        {
          *** CJumliTracker ***;
          Rechteck=107,299,365,556;
          Order=-1;
          UMLElementID=164;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=658,565,816,635;
          Order=-1;
          UMLElementID=197;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=658,653,816,723;
          Order=-1;
          UMLElementID=204;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=657,267,821,354;
          Order=-1;
          UMLElementID=199;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=240,718,345,777;
          Order=-1;
          UMLElementID=101;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=702,30,931,151;
          Order=-1;
          UMLElementID=148;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=362,717,509,838;
          Order=-1;
          UMLElementID=128;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=542,30,671,168;
          Order=-1;
          UMLElementID=140;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=657,394,836,532;
          Order=-1;
          UMLElementID=130;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=31,30,231,185;
          Order=-1;
          UMLElementID=116;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=311,81,480,253;
          Order=-1;
          UMLElementID=154;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=41,719,221,976;
          Order=-1;
          UMLElementID=209;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=367,639,374,646;
          Order=-1;
          UMLElementID=102;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=353,555,360,562;
          Order=-1;
          UMLElementID=129;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=231;
          TextOffset=0,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=363,509,370,516;
          Order=-1;
          UMLElementID=183;
          Knick=612,567;
          TextOffset=0,5;
          OffsetRollenName=-52,-18;
          OffsetA=5,5;
          OffsetB=-3,3;
          {
            *** Linie ***;
            Punkt=612,567;
          };
          {
            *** Linie ***;
            Punkt=367,513;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=367,556,374,563;
          Order=-1;
          UMLElementID=184;
          Knick=569,688;
          TextOffset=0,5;
          OffsetRollenName=-45,-19;
          OffsetA=5,5;
          OffsetB=-1,-31;
          {
            *** Linie ***;
            Punkt=569,688;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=465,356,472,363;
          Order=-1;
          UMLElementID=185;
          TextOffset=0,5;
          OffsetRollenName=-37,-18;
          OffsetA=5,5;
          OffsetB=6,-4;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=575,458,582,465;
          Order=-1;
          UMLElementID=186;
          Knick=473,465;
          TextOffset=0,5;
          OffsetRollenName=-38,-19;
          OffsetA=5,5;
          OffsetB=5,-1;
          {
            *** Linie ***;
            Punkt=473,465;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=259,308,375,325;
          Order=-1;
          UMLElementID=127;
          TextOffset=0,5;
          OffsetRollenName=69,-11;
          OffsetA=-10,2;
          OffsetB=5,5;
        };
      };
      {
        *** Diagramm ***;
        Name="HapticEffects";
        ID=17;
        {
          *** CJumliTracker ***;
          Rechteck=319,30,488,202;
          Order=-1;
          UMLElementID=154;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=324,310,493,465;
          Order=-1;
          UMLElementID=103;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=97,310,288,465;
          Order=-1;
          UMLElementID=54;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=532,310,701,465;
          Order=-1;
          UMLElementID=253;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=115;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=68;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=265;
          TextOffset=0,5;
        };
      };
      {
        *** Diagramm ***;
        Name="HapticActions";
        ID=18;
        {
          *** CJumliTracker ***;
          Rechteck=246,83,410,170;
          Order=-1;
          UMLElementID=199;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=208,268,451,457;
          Order=-1;
          UMLElementID=69;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=100;
          TextOffset=0,5;
        };
      };
      {
        *** Diagramm ***;
        Name="Utilities";
        ID=19;
        {
          *** CJumliTracker ***;
          Rechteck=90,66,195,204;
          Order=-1;
          UMLElementID=243;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
      };
      {
        *** Diagramm ***;
        Name="Businesslogic";
        ID=20;
        {
          *** CJumliTracker ***;
          Rechteck=71,299,228,420;
          Order=-1;
          UMLElementID=187;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=368,498,631,585;
          Order=-1;
          UMLElementID=193;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=488,60,601,119;
          Order=-1;
          UMLElementID=206;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=71,60,280,198;
          Order=-1;
          UMLElementID=233;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=452,703,630,824;
          Order=-1;
          UMLElementID=23;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=481,208,661,465;
          Order=-1;
          UMLElementID=209;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** CJumliTracker ***;
          Rechteck=70,595,311,886;
          Order=-1;
          UMLElementID=30;
          IsWithAttributs=true;
          IsWithMethods=true;
          IsHideTaggedValue=true;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=192;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=232;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Order=-1;
          UMLElementID=52;
          TextOffset=0,5;
        };
        {
          *** VererbungZeichner ***;
          Rechteck=377,612,384,619;
          Order=-1;
          UMLElementID=53;
          TextOffset=0,5;
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=279,83,286,90;
          Order=-1;
          UMLElementID=242;
          Knick=283,87;
          TextOffset=0,5;
          OffsetRollenName=-34,-20;
          OffsetA=5,5;
          OffsetB=5,5;
          {
            *** Linie ***;
            Punkt=283,87;
          };
        };
        {
          *** AssoziationZeichner ***;
          Rechteck=254,316,377,333;
          Order=-1;
          UMLElementID=230;
          TextOffset=0,5;
          OffsetRollenName=53,-19;
          OffsetA=5,5;
          OffsetB=5,5;
        };
      };
      {
        *** Diagramm ***;
        Name="Analysiert";
        ID=21;
      };
      {
        *** Package ***;
        Name="genSource";
        ID=22;
        Zugriff=2;
      };
      {
        *** Klasse ***;
        Name="AppConfiguration";
        ID=23;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\AppConfiguration.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\AppConfiguration.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_ProjectDuration";
          ID=24;
          Datentyp="int";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="AppConfiguration";
          ID=25;
        };
        {
          *** Methode ***;
          Name="getProjectDuration";
          ID=26;
          RueckgabeWert="int";
        };
        {
          *** Methode ***;
          Name="setProjectDuration";
          ID=27;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=28;
            Typ="int";
          };
        };
        {
          *** Methode ***;
          Name="~AppConfiguration";
          ID=29;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tdiese KLasse verwaltet alle Aufgaben, die im Graf dargestellt werden \
        sollen./...............................................................................";
        Name="BusinessTask";
        ID=30;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\BusinessTask.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\BusinessTask.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="day_begin";
          ID=31;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="day_duration";
          ID=32;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="day_end";
          ID=33;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="day_final";
          ID=34;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="force";
          ID=35;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="isMilestone";
          ID=36;
          Datentyp="bool";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="name[60]";
          ID=37;
          Datentyp="char";
          Zugriff=2;
        };
        {
          *** Attribut ***;
          Name="surface";
          ID=38;
          Datentyp="int";
          Zugriff=2;
        };
        {
          *** Methode ***;
          Name="BusinessTask";
          ID=40;
          {
            *** Parameter ***;
            Name="day_begin";
            ID=41;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="day_duration";
            ID=42;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="day_final";
            ID=43;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="isMilestone";
            ID=44;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="BusinessTask";
          ID=39;
        };
        {
          *** Methode ***;
          Name="businessToViewCoordinates";
          ID=45;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="calcDayEnd";
          ID=46;
          Zugriff=2;
          RueckgabeWert="int";
          {
            *** Parameter ***;
            Name="begin";
            ID=47;
            Typ="int";
          };
          {
            *** Parameter ***;
            Name="duration";
            ID=48;
            Typ="int";
          };
        };
        {
          *** Methode ***;
          Name="getForce";
          ID=49;
          RueckgabeWert="int";
        };
        {
          *** Methode ***;
          Name="viewToBusinessCoordinates";
          ID=50;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="~BusinessTask";
          ID=51;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=52;
          A=30;
          B=187;
          BasisKlasse="IBusinessAdapter";
        };
        {
          *** Vererbung ***;
          ID=53;
          A=30;
          B=193;
          BasisKlasse="IBusinessConverter";
        };
      };
      {
        *** Klasse ***;
        Name="ConstantForceEffect";
        ID=54;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\ConstantForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\ConstantForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Direction";
          ID=55;
          Datentyp="hduVector3Dd";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=56;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="ConstantForceEffect";
          ID=57;
          {
            *** Parameter ***;
            Name="direction[3]";
            ID=58;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="magnitude";
            ID=59;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=60;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setDirection";
          ID=61;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="x";
            ID=62;
            Typ="double";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=63;
            Typ="double";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=64;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=65;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=66;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~ConstantForceEffect";
          ID=67;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=68;
          A=54;
          B=154;
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tEine Eventhandlerklasse die es ermöglicht, haptische Objekte mit \
        dem /\t\t\tPhantom zu bewegen/\t\t\t/\t\t\tDer Eventhandler reagiert auf \
        die folgende Events:/\t\t\t- der vordere Phantom-Button wird gedrückt, \
        wenn ein Objekt mit dem /\t\t\t  Phantom berührt wird/\t\t\t- das Phantom \
        wird mit gedrücktem Button bewegt/\t\t\t- der vordere Phantom-Button wird \
        losgelassen/\t\t\tWirkung: Solange der Button gedrückt gehalten wird, folgt \
        das /\t\t\tregistrierte Objekt der Bewegung des Phantom/ @todo\tObjekte \
        lassen sich noch nicht nach hinten verschieben...............................................................................";
        Name="DragObjectHandler";
        ID=69;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\DragObjectHandler.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\DragObjectHandler.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          Position des Proxy beim letzten Aufruf des Draghandlers/ Dient zur Berechnung \
          des Vektors um den das Objekt verschoben werden soll";
          Name="m_LastProxyPos";
          ID=70;
          Datentyp="hduVector3Dd";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tKonstruktor, initialisiert das Eventhandler-Objekt mit dem /\t\t\tzugehörigen \
          haptischen Objekt/ @param\tpObj\tPointer auf das haptische Objekt für das \
          der /\t\t\t\t\tEventhandler zuständig sein soll.......................................................................";
          Name="DragObjectHandler";
          ID=71;
          {
            *** Parameter ***;
            Name="pObj";
            ID=72;
            Typ="HapticObject *";
          };
        };
        {
          *** Methode ***;
          Doku="/ @brief\t(HLAPI-Callbackfunktion) Started das Draggen des Objekts/ \
          @param\tevent\tGibt an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion \
          aufgerufen werden soll, hier HL_EVENT_1BUTTONDOWN/\t@param\tshapeID\tDie \
          ShapeID des Objekts, das bewegt werden soll/ @param\tthread\tGibt an, in \
          welchem HLAPI-Thread das Event behandelt /\t\t\t\t\twerden soll, in diesem \
          Fall HL_CLIENT_THREAD/ @param\tcache\tHLAPI-State Schnappschuss in dem \
          Moment, in dem das Event feuert/ @param\tpHandlerObject\tPointer auf das \
          DragObjectHandler-Objekt, das/\t\t\t\t\tdas Event verarbeiten soll.......................................................................";
          Name="OnButtonDown";
          ID=73;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=74;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=75;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=76;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=77;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="pHandlerObject";
            ID=78;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\t(HLAPI-Callbackfunktion) Beendet das Draggen des Objekts/ @param\tevent\tGibt \
          an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
          werden soll, hier HL_EVENT_1BUTTONUP/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
          angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
          Event behandelt/\t\t\t\t\t werden soll, in diesem Fall HL_CLIENT_THREAD/ \
          @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert/ @param\tuserdata\tWird von dieser Funktion nicht benötigt.......................................................................";
          Name="OnButtonUp";
          ID=79;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=80;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=81;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=82;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=83;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="userdata";
            ID=84;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\t(HLAPI-Callbackfunktion) Steuert das Draggen des Objekts/ @param\tevent\tGibt \
          an, auf welches HLAPI-Event hin die Callback-/\t\t\t\t\tFunktion aufgerufen \
          werden soll, hier HL_EVENT_MOTION/\t@param\tshapeID\thier soll HL_OBJECT_ANY \
          angegeben werden/ @param\tthread\tGibt an, in welchem HLAPI-Thread das \
          Event behandelt/\t\t\t\t\twerden soll, in diesem Fall HL_CLIENT_THREAD/ \
          @param\tcache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert/ @param\tpHandlerObject\tPointer auf das DragObjectHandler-Objekt, \
          das/\t\t\t\t\t das Event verarbeiten soll.......................................................................";
          Name="OnDrag";
          ID=85;
          IsStatic=true;
          Zugriff=1;
          RueckgabeWert="void HLCALLBACK";
          {
            *** Parameter ***;
            Name="event";
            ID=86;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="shapeID";
            ID=87;
            Typ="HLuint";
          };
          {
            *** Parameter ***;
            Name="thread";
            ID=88;
            Typ="HLenum";
          };
          {
            *** Parameter ***;
            Name="cache";
            ID=89;
            Typ="HLcache *";
          };
          {
            *** Parameter ***;
            Name="pHandlerObject";
            ID=90;
            Typ="void *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tVeranlasst das haptische Objekt, sich mit dem Proxy zu bewegen/ \
          @param\tpCache\tHLAPI-State Schnappschuss in dem Moment, in dem das Event \
          feuert.......................................................................";
          Name="handleDrag";
          ID=91;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pCache";
            ID=92;
            Typ="HLcache *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tNimmt die Proxy-Position beim Starten des Drag-Vorgangs auf/ @param\tpCache\tHLAPI-State \
          Schnappschuss in dem Moment, in dem das Event feuert.......................................................................";
          Name="initAction";
          ID=93;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pCache";
            ID=94;
            Typ="HLcache *";
          };
        };
        {
          *** Methode ***;
          Doku="********************************************************************* \
          Implementierung der von IHapticAction geerbten Methoden*********************************************************************......................................................................./ \
          @brief\tRegistriert die Aktion für eine Shape bei HLAPI/ @param\tshapeID\tID \
          der Shape, für die die Aktion registriert werden soll.......................................................................";
          Name="registerAction";
          ID=95;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=96;
            Typ="HLuint";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tMeldet die Aktion für eine Shape bei HLAPI ab/ @param\tshapeID\tID \
          der Shape, für die die Aktion registriert wurde.......................................................................";
          Name="unregisterAction";
          ID=97;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=98;
            Typ="HLuint";
          };
        };
        {
          *** Assoziation ***;
          ID=99;
          Datentyp="HapticObject*";
          Zugriff=2;
          A=69;
          B=164;
          RollenName="m_pDragObj";
        };
        {
          *** Vererbung ***;
          Stereotype="implements";
          ID=100;
          A=69;
          B=199;
        };
      };
      {
        *** Klasse ***;
        Name="Edge";
        ID=101;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Edge.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Edge.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Vererbung ***;
          ID=102;
          A=101;
          B=164;
        };
      };
      {
        *** Klasse ***;
        Name="FrictionForceEffect";
        ID=103;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\FrictionForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\FrictionForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Gain";
          ID=104;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=105;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="FrictionForceEffect";
          ID=106;
          {
            *** Parameter ***;
            Name="magnitude";
            ID=107;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="gain";
            ID=108;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=109;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setGain";
          ID=110;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=111;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=112;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=113;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~FrictionForceEffect";
          ID=114;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=115;
          A=103;
          B=154;
        };
      };
      {
        *** Klasse ***;
        Name="GraphScene";
        ID=116;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\GraphScene.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\GraphScene.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="GraphScene";
          ID=117;
        };
        {
          *** Methode ***;
          Name="addObject";
          ID=118;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="obj";
            ID=119;
            Typ="HapticObject *";
          };
        };
        {
          *** Methode ***;
          Name="initScene";
          ID=120;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderScene";
          ID=121;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="bHapticsEnabled";
            ID=122;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="renderSceneGraphics";
          ID=123;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderSceneHaptics";
          ID=124;
          Zugriff=1;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="bHapticsEnabled";
            ID=125;
            Typ="bool";
          };
        };
        {
          *** Methode ***;
          Name="~GraphScene";
          ID=126;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=127;
          Datentyp="vector<HapticObject>";
          Zugriff=1;
          A=116;
          B=164;
          RollenName="m_SceneElements";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
      };
      {
        *** Klasse ***;
        Name="Grid";
        ID=128;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Grid.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Grid.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Columns";
          ID=327;
          Datentyp="int";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Rows";
          ID=328;
          Datentyp="int";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="Grid";
          ID=329;
          {
            *** Parameter ***;
            Name="cols";
            ID=330;
            Typ="int";
            Default="1";
          };
          {
            *** Parameter ***;
            Name="rows";
            ID=331;
            Typ="int";
            Default="1";
          };
        };
        {
          *** Methode ***;
          Name="renderShape";
          ID=332;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="~Grid";
          ID=333;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=129;
          A=128;
          B=164;
        };
      };
      {
        *** Klasse ***;
        Name="HapticConstraint";
        ID=130;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticConstraint.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticConstraint.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_HLConstraintID";
          ID=310;
          Datentyp="HLuint";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_SnapDistance";
          ID=311;
          Datentyp="HLfloat";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticConstraint";
          ID=312;
          {
            *** Parameter ***;
            Name="snapDist";
            ID=313;
            Typ="HLfloat";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="renderConstraint";
          ID=314;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setSnapDistance";
          ID=315;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=316;
            Typ="HLfloat";
          };
        };
        {
          *** Methode ***;
          Name="~HapticConstraint";
          ID=317;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticCursor";
        ID=140;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticCursor.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticCursor.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tSkalierungsfaktor, der je nach Projektion berechnet wird........................................................................";
          Name="m_Scale";
          ID=141;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tGröße des Cursors in Pixeln........................................................................";
          Name="m_SizePixels";
          ID=142;
          Datentyp="int";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./.......................................................................";
          Name="HapticCursor";
          ID=143;
          {
            *** Parameter ***;
            Name="sizePix";
            ID=144;
            Typ="int";
            Default="DEFAULT_CURSOR_SIZE_PIX";
          };
        };
        {
          *** Methode ***;
          Name="render";
          ID=145;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="scale";
          ID=146;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="~HapticCursor";
          ID=147;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticDevice";
        ID=148;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticDevice.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticDevice.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_hHLRenderingContext";
          ID=149;
          Datentyp="HHLRC";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_hHapticDevice";
          ID=150;
          Datentyp="HHD";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="initialize";
          ID=151;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="isActive";
          ID=152;
          RueckgabeWert="bool";
        };
        {
          *** Methode ***;
          Name="updateWorkspace";
          ID=153;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Name="HapticEffect";
        ID=154;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_EffectID";
          ID=155;
          Datentyp="HLuint";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_EffectType";
          ID=156;
          Datentyp="HLenum";
          IsConst=true;
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticEffect";
          ID=157;
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=158;
          IsAbstract=true;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="startEffect";
          ID=159;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="stopEffect";
          ID=160;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="triggerEffect";
          ID=161;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Doku="Millisekunden";
            Name="duration";
            ID=162;
            Typ="double";
            Default="100.0";
          };
        };
        {
          *** Methode ***;
          Name="~HapticEffect";
          ID=163;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="HapticObject";
        ID=164;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticObject.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticObject.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_HLShapeID";
          ID=165;
          Datentyp="HLuint";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="HapticObject";
          ID=166;
        };
        {
          *** Methode ***;
          Name="addGraphicMaterial";
          ID=167;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="material";
            ID=168;
            Typ="IGraphicMaterial *";
          };
        };
        {
          *** Methode ***;
          Name="addHapticAction";
          ID=169;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="act";
            ID=170;
            Typ="IHapticAction *";
          };
        };
        {
          *** Methode ***;
          Name="addHapticMaterial";
          ID=171;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="material";
            ID=172;
            Typ="IHapticMaterial *";
          };
        };
        {
          *** Methode ***;
          Name="getPosition";
          ID=173;
          RueckgabeWert="Position";
          RueckgabeWertID=243;
        };
        {
          *** Methode ***;
          Name="renderDefaultGraphicProperties";
          ID=174;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderDefaultHapticProperties";
          ID=175;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderGraphics";
          ID=176;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderHaptics";
          ID=177;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="renderShape";
          ID=178;
          IsAbstract=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setHapticConstraint";
          ID=179;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=180;
            Typ="const HapticConstraint*";
          };
        };
        {
          *** Methode ***;
          Name="~HapticObject";
          ID=181;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=182;
          Zugriff=2;
          A=164;
          B=197;
          RollenName="igraphicproperty";
        };
        {
          *** Assoziation ***;
          ID=183;
          Datentyp="vector<IGraphicProperty>";
          Zugriff=1;
          A=164;
          B=197;
          RollenName="m_graphicProperties";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=184;
          Datentyp="vector<IHapticProperty>";
          Zugriff=1;
          A=164;
          B=204;
          RollenName="m_hapticProperties";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=185;
          Datentyp="vector<IHapticAction>";
          Zugriff=1;
          A=164;
          B=199;
          RollenName="m_hapticActions";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
        {
          *** Assoziation ***;
          ID=186;
          Datentyp="HapticConstraint*";
          Zugriff=1;
          A=164;
          B=130;
          RollenName="m_hapticConstraint";
          KardinalitaetAnfangsKlasse="0..1";
          KardinalitaetEndeKlasse="0..1";
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tAdapterklasse der eine Referenz zwischen Grafikobjekten der/\t\t\thaptischen \
        Szene und den Aufgaben herstellt./\t\t\t/\t\t\tJeder Node enthält eine \
        Referenz auf seine entsprechende/\t\t\tAufgabe um relevante Daten mit Ihr \
        auszutauschen/ @todo\tDefinition der abstrakten Adapter Methoden...............................................................................";
        Name="IBusinessAdapter";
        Stereotype="Interface";
        ID=187;
        Image="Interface";
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\IBusinessAdapter.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IBusinessAdapter.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Doku=".............................................................................../ \
          @brief\tLiefert die Kraft, die notwendig ist, um eine Aufgabe zu verschieben//\t\t\t1 \
          = keine Kraft/\t\t\t2 = lässt sich schwer bewegen/\t\t\t3 = lässt sich \
          gar nicht bewegen/\t\t\t0 = kann nicht berechnet werden/\t\t\t-1= Fehler...............................................................................";
          Name="getForce";
          ID=188;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="int";
        };
        {
          *** Methode ***;
          Name="getHeight";
          ID=189;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="getPosition";
          ID=190;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="Position";
          RueckgabeWertID=243;
        };
        {
          *** Methode ***;
          Name="getWidth";
          ID=191;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="float";
        };
        {
          *** Vererbung ***;
          ID=192;
          A=187;
          B=233;
        };
      };
      {
        *** Klasse ***;
        Name="IBusinessConverter";
        Stereotype="Interface";
        ID=193;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\IBusinessConverter.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IBusinessConverter.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="businessToViewCoordinates";
          ID=194;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="Position";
          RueckgabeWertID=243;
        };
        {
          *** Methode ***;
          Name="viewToBusinessCoordinates";
          ID=195;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="viewPosition";
            ID=196;
            Typ="Position";
            TypID=243;
          };
        };
      };
      {
        *** Klasse ***;
        Name="IGraphicMaterial";
        Stereotype="Interface";
        ID=197;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\GraphicalProperty.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\GraphicalProperty.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="renderProperty";
          ID=198;
          IsAbstract=true;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Name="IHapticAction";
        Stereotype="Interface";
        ID=199;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticAction.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticAction.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="registerAction";
          ID=200;
          IsAbstract=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=201;
            Typ="HLuint";
          };
        };
        {
          *** Methode ***;
          Name="unregisterAction";
          ID=202;
          IsAbstract=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="shapeID";
            ID=203;
            Typ="HLuint";
          };
        };
      };
      {
        *** Klasse ***;
        Name="IHapticMaterial";
        Stereotype="Interface";
        ID=204;
        Image="Interface";
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\HapticProperty.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\HapticProperty.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Name="renderProperty";
          ID=205;
          IsAbstract=true;
          RueckgabeWert="void";
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tSchnittstelle für  das Observer-Pattern//\t\t\tKlassen, die diese \
        Schnittstelle implementieren, können sich bei /\t\t\tObservables anmelden \
        um über Änderungen informiert zu werden...............................................................................";
        Name="IObserver";
        ID=206;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="IObserver.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\IObserver.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
          Observable zu holen.......................................................................";
          Name="Update";
          ID=207;
          IsAbstract=true;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObservable";
            ID=208;
            Typ="Observable *";
          };
        };
      };
      {
        *** Klasse ***;
        Doku="class Texture;class IBusinessAdapter;.............................................................................../ \
        @author\tKatharina Greiner, Matr.-Nr. 943471//\t@brief\tHaptisches Objekt, \
        das einen Knoten in einem Graphen darstellt................................................................................";
        Name="Node";
        ID=209;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\Node.cpp";
        HeaderFileName="genSource\\Node.h";
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tID der OpenGL-Displayliste, mit der der Node gezeichnet wird........................................................................";
          Name="m_DisplayList";
          ID=210;
          Datentyp="GLuint";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Height";
          ID=211;
          Datentyp="float";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Width";
          ID=212;
          Datentyp="float";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="Node";
          ID=213;
          {
            *** Parameter ***;
            Name="businessObj";
            ID=214;
            Typ="IBusinessAdapter *";
          };
        };
        {
          *** Methode ***;
          Doku="********************************************************************* \
          Von IObserver geerbte Methoden*********************************************************************......................................................................./ \
          @brief\tVeranlasst den Observer, sich die benötigten Informationen /\t\t\tvom \
          Observable zu holen........................................................................";
          Name="Update";
          ID=215;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObservable";
            ID=216;
            Typ="Observable *";
          };
        };
        {
          *** Methode ***;
          Name="getHeight";
          ID=217;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="getWidth";
          ID=218;
          RueckgabeWert="float";
        };
        {
          *** Methode ***;
          Name="releaseDisplayList";
          ID=219;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................\t\tvoid \
          setTexture( const Texture* value );********************************************************************* \
          Von HapticObject geerbte Methoden*********************************************************************..............................................................................................................................................";
          Name="renderShape";
          ID=220;
          IsVirtual=true;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setHeight";
          ID=221;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=222;
            Typ="float";
          };
        };
        {
          *** Methode ***;
          Name="setWidth";
          ID=223;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=224;
            Typ="float";
          };
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="translate";
          ID=225;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="x";
            ID=226;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=227;
            Typ="const double";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=228;
            Typ="const double";
          };
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="~Node";
          ID=229;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=230;
          Datentyp="IBusinessAdapter*";
          Zugriff=1;
          A=209;
          B=187;
          RollenName="m_pBusinessObject";
        };
        {
          *** Vererbung ***;
          ID=231;
          A=209;
          B=164;
        };
        {
          *** Vererbung ***;
          Stereotype="implements";
          ID=232;
          A=209;
          B=206;
        };
      };
      {
        *** Klasse ***;
        Doku=".............................................................................../ \
        @brief\tImplementiert das Observer-Pattern//\t\t\tKlassen, die von Observable \
        erben, können Objekte, die an ihrem Zustand/\t\t\tinteressiert sind über \
        Änderungen informieren ohne eine enge Bindung /\t\t\tzu ihnen zu haben................................................................................";
        Name="Observable";
        ID=233;
        Datentyp="class";
        Zugriff=3;
        KomponentenId=-1;
        FileName="genSource\\Observable.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Observable.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Doku="......................................................................./ \
          @brief\tListe aller angemeldeten Observer........................................................................";
          Name="m_Observers";
          ID=234;
          Datentyp="list<IObserver*>";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tRegistriert einen neuen Obersver........................................................................";
          Name="AddObserver";
          ID=235;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObserver";
            ID=236;
            Typ="IObserver *";
          };
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tInformiert alle Observer darüber, dass sich der Zustand des /\t\t\tObservables \
          geändert hat........................................................................";
          Name="NotifyAll";
          ID=237;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Doku="..............................................................................................................................................";
          Name="Observable";
          ID=238;
        };
        {
          *** Methode ***;
          Doku="......................................................................./ \
          @brief\tMeldet einen Observer beim Observable ab. Das Observer-Objekt/\t\t\twird \
          dabei nicht gelöscht........................................................................";
          Name="RemoveObserver";
          ID=239;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="pObserver";
            ID=240;
            Typ="IObserver *";
          };
        };
        {
          *** Methode ***;
          Name="~Observable";
          ID=241;
          IsVirtual=true;
        };
        {
          *** Assoziation ***;
          ID=242;
          Datentyp="list<IObserver>";
          Zugriff=2;
          A=233;
          B=206;
          RollenName="m_Observers";
          KardinalitaetAnfangsKlasse="0..*";
          KardinalitaetEndeKlasse="1";
        };
      };
      {
        *** Klasse ***;
        Name="Position";
        Stereotype="struct";
        ID=243;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Utilities.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Utilities.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="x";
          ID=244;
          Datentyp="double";
        };
        {
          *** Attribut ***;
          Name="y";
          ID=245;
          Datentyp="double";
        };
        {
          *** Attribut ***;
          Name="z";
          ID=246;
          Datentyp="double";
        };
        {
          *** Methode ***;
          Name="Position";
          ID=247;
          {
            *** Parameter ***;
            Name="x";
            ID=248;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="y";
            ID=249;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="z";
            ID=250;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="~Position";
          ID=251;
          IsVirtual=true;
        };
      };
      {
        *** Klasse ***;
        Name="Texture";
        ID=252;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\Texture.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\Texture.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
      };
      {
        *** Klasse ***;
        Name="ViscousForceEffect";
        ID=253;
        Datentyp="class";
        NameSpace="GraphFWEntwurf";
        KomponentenId=-1;
        FileName="genSource\\ViscousForceEffect.cpp";
        FileActiveLine=-1;
        HeaderFileName="genSource\\ViscousForceEffect.h";
        HeaderFileActiveLine=-1;
        Parent=-1;
        {
          *** Attribut ***;
          Name="m_Gain";
          ID=254;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Attribut ***;
          Name="m_Magnitude";
          ID=255;
          Datentyp="double";
          Zugriff=1;
        };
        {
          *** Methode ***;
          Name="ViscousForceEffect";
          ID=256;
          {
            *** Parameter ***;
            Name="magnitude";
            ID=257;
            Typ="double";
            Default="0.0";
          };
          {
            *** Parameter ***;
            Name="gain";
            ID=258;
            Typ="double";
            Default="0.0";
          };
        };
        {
          *** Methode ***;
          Name="renderProperties";
          ID=259;
          IsVirtual=true;
          Zugriff=1;
          RueckgabeWert="void";
        };
        {
          *** Methode ***;
          Name="setGain";
          ID=260;
          IsVirtual=true;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=261;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="setMagnitude";
          ID=262;
          RueckgabeWert="void";
          {
            *** Parameter ***;
            Name="value";
            ID=263;
            Typ="double";
          };
        };
        {
          *** Methode ***;
          Name="~ViscousForceEffect";
          ID=264;
          IsVirtual=true;
        };
        {
          *** Vererbung ***;
          ID=265;
          A=253;
          B=154;
        };
      };
    };
    {
      *** SourceFiles ***;
      FileName="G:\\Projekt\\Doku\\Diagramme\\main.cpp";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="G:\\Projekt\\Doku\\Diagramme\\genSource\\Grid.h";
      ActiveLine=-1;
    };
    {
      *** SourceFiles ***;
      FileName="G:\\Projekt\\Doku\\Diagramme\\genSource\\Grid.cpp";
      ActiveLine=-1;
    };
  };
};
