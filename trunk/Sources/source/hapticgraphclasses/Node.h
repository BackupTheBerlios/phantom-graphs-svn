//*******************************************************************************
/// @file	Node.h
/// @author	Katharina Greiner, Matr.-Nr. 943471
/// @date	Erstellt am		30.12.2005
/// @date	Letzte Änderung	08.01.2006
//*******************************************************************************

// Änderungen:
// 03.01.06		- Methode translate() hinzugefügt
// 08.01.06		- Attribute m_Width und m_Height und entsprechende Getter und Setter
//				  hinzugefügt


#ifndef _NODE_H_
#define _NODE_H_

// wird von gl.h benötigt
#include <windows.h>

// OpenGL includes
#include <GL/gl.h>

#include "HapticObject.h"
#include "../businesslogic/IObserver.h"
#include "../businesslogic/IBusinessAdapter.h"


//...............................................................................
/// @author	Katharina Greiner, Matr.-Nr. 943471
///
///	@brief	Haptisches Objekt, das einen Knoten in einem Graphen darstellt.
//...............................................................................
class Node : public HapticObject, public IObserver
{
	protected:	
	
		//.......................................................................
		/// @brief
		//.......................................................................
		float m_Width;
		
		//.......................................................................
		/// @brief
		//.......................................................................
		float m_Height;

		//.......................................................................
		/// @brief
		//.......................................................................
		IBusinessAdapter * m_pBusinessObject;

		//.......................................................................
		/// @brief	ID der OpenGL-Displayliste, mit der der Node gezeichnet wird.
		//.......................................................................
		GLuint m_DisplayList;

		//.......................................................................
		//.......................................................................
//		Texture* m_Texture;

		//.......................................................................
		/// @brief
		//.......................................................................
		void releaseDisplayList();

	public:	

		//.......................................................................
		//.......................................................................
		Node( IBusinessAdapter * businessObj );

		//.......................................................................
		//.......................................................................
		virtual ~Node();

		//.......................................................................
		/// @brief
		//.......................................................................
		void setWidth( float value );
	
		//.......................................................................
		/// @brief
		//.......................................................................
		void setHeight( float value );
		
		//.......................................................................
		/// @brief
		//.......................................................................
		float getWidth();
		
		//.......................................................................
		/// @brief
		//.......................................................................
		float getHeight();
		
		//.......................................................................
		//.......................................................................
//		void setTexture( const Texture* value );

		//=======================================================================
		// Von HapticObject geerbte Methoden
		//=======================================================================

		//.......................................................................
		//.......................................................................
		virtual void renderShape();

		//.......................................................................
		//.......................................................................
		virtual void translate(const double x, const double y, const double z);

		//=======================================================================


		//=======================================================================
		// Von IObserver geerbte Methoden
		//=======================================================================

		//.......................................................................
		/// @brief	Veranlasst den Observer, sich die benötigten Informationen 
		///			vom Observable zu holen.
		//.......................................................................
		virtual void Update( Observable * pObservable );

		//=======================================================================
		
};

#endif // _NODE_H_