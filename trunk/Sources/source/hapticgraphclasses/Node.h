//*******************************************************************************
/// @file	Node.h
/// @author	Katharina Greiner, Matr.-Nr. 943471
/// @date	Erstellt am		30.12.2005
/// @date	Letzte Änderung	03.01.2006
//*******************************************************************************

// Änderungen:
// 03.01.06		- Methode translate() hinzugefügt


#ifndef _NODE_H_
#define _NODE_H_

// wird von gl.h benötigt
#include <windows.h>

// OpenGL includes
#include <GL/gl.h>

#include "HapticObject.h"
#include "../businesslogic/IObserver.h"

//class Texture;
class IBusinessAdapter;

//...............................................................................
//...............................................................................
class Node : public HapticObject, public IObserver
{
	protected:

		//.......................................................................
		//.......................................................................
		IBusinessAdapter * m_pBusinessObject;

		//.......................................................................
		/// @brief	ID der OpenGL-Displayliste, mit der der Node gezeichnet wird.
		//.......................................................................
		GLuint m_DisplayList;

		//.......................................................................
		//.......................................................................
//		Texture* m_Texture;

	public:

		//.......................................................................
		//.......................................................................
		Node( IBusinessAdapter * businessObj );

		//.......................................................................
		//.......................................................................
		virtual ~Node();
		
		//.......................................................................
		//.......................................................................
//		void setTexture( const Texture* value );

		//***********************************************************************
		// Von HapticObject geerbte Methoden
		//***********************************************************************

		//.......................................................................
		//.......................................................................
		virtual void renderShape();

		//.......................................................................
		//.......................................................................
		virtual void translate(const double x, const double y, const double z);

		//***********************************************************************
		// Von IObserver geerbte Methoden
		//***********************************************************************

		//.......................................................................
		/// @brief	Veranlasst den Observer, sich die benötigten Informationen 
		///			vom Observable zu holen.
		//.......................................................................
		virtual void Update( Observable * pObservable );
		
};

#endif